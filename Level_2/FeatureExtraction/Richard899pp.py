from retic.runtime import *
from retic.guarded import *
from retic.typing import *
import pickle
CIDict = {}
CIDict['fci1'] = 0
CIDict['fci2'] = 0
CIDict['fci3'] = 0
CIDict['fci4'] = 0
CIDict['fci5'] = 0
CIDict['fci6'] = 0
CIDict['fci7'] = 0
CIDict['fci8'] = 0
CIDict['fci9'] = 0
CIDict['fci10'] = 0
CIDict['fci11'] = 0
CIDict['fci12'] = 0
CIDict['fci13'] = 0
CIDict['fci14'] = 0
import pyperf
import time
I_IDLE = 1
I_WORK = 2
I_HANDLERA = 3
I_HANDLERB = 4
I_DEVA = 5
I_DEVB = 6
K_DEV = 1000
K_WORK = 1001
BUFSIZE = 4
BUFSIZE_RANGE = retic_cast(range(retic_cast(BUFSIZE, Int, Dyn, '\n.\\Richard899.py:21:16: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Iterable(Dyn), Dyn, '\n.\\Richard899.py:21:0: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')


class Packet(retic_actual(object)):
    retic_class_type = Class('Packet', {'append_to': Function(NamedParameters([('self', Dyn), ('lst', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('l', Dyn), ('i', Dyn), ('k', Dyn)]), Dyn), }, {})

    def __init__(self, l, i, k):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:25:8: Cannot write to attribute link in value %s because it is not an object. (code NON_OBJECT_WRITE)').link = l
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:26:8: Cannot write to attribute ident in value %s because it is not an object. (code NON_OBJECT_WRITE)').ident = i
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:27:8: Cannot write to attribute kind in value %s because it is not an object. (code NON_OBJECT_WRITE)').kind = k
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:28:8: Cannot write to attribute datum in value %s because it is not an object. (code NON_OBJECT_WRITE)').datum = retic_cast(0, Int, Dyn, '\n.\\Richard899.py:28:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:29:8: Cannot write to attribute data in value %s because it is not an object. (code NON_OBJECT_WRITE)').data = retic_cast(([0] * BUFSIZE), List(Int), Dyn, '\n.\\Richard899.py:29:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')

    def append_to(self, lst):
        CIDict['localci1'] = 0
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:33:8: Cannot write to attribute link in value %s because it is not an object. (code NON_OBJECT_WRITE)').link = retic_cast(None, Void, Dyn, '\n.\\Richard899.py:33:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        if (lst is None):
            return self
        else:
            p = lst
            next = retic_cast(p, Dyn, Object('', {'link': Dyn, }), '\n.\\Richard899.py:38:19: Accessing nonexistant object attribute link from value %s. (code WIDTH_DOWNCAST)').link
            while (next is not None):
                CIDict['fci1'] += 1
                CIDict['localci1'] += 1
                p = next
                next = retic_cast(p, Dyn, Object('', {'link': Dyn, }), '\n.\\Richard899.py:41:23: Accessing nonexistant object attribute link from value %s. (code WIDTH_DOWNCAST)').link
            retic_cast(p, Dyn, Object('', {}), '\n.\\Richard899.py:42:12: Cannot write to attribute link in value %s because it is not an object. (code NON_OBJECT_WRITE)').link = self
            return lst


class TaskRec(retic_actual(object)):
    retic_class_type = Class('TaskRec', {}, {})
    pass


class DeviceTaskRec(retic_actual(TaskRec)):
    retic_class_type = Class('DeviceTaskRec', {'__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})

    def __init__(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:56:8: Cannot write to attribute pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').pending = retic_cast(None, Void, Dyn, '\n.\\Richard899.py:56:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')


class IdleTaskRec(retic_actual(TaskRec)):
    retic_class_type = Class('IdleTaskRec', {'__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})

    def __init__(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:62:8: Cannot write to attribute control in value %s because it is not an object. (code NON_OBJECT_WRITE)').control = retic_cast(1, Int, Dyn, '\n.\\Richard899.py:62:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:63:8: Cannot write to attribute count in value %s because it is not an object. (code NON_OBJECT_WRITE)').count = retic_cast(10000, Int, Dyn, '\n.\\Richard899.py:63:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')


class HandlerTaskRec(retic_actual(TaskRec)):
    retic_class_type = Class('HandlerTaskRec', {'deviceInAdd': Function(NamedParameters([('self', Dyn), ('p', Dyn)]), Dyn), 'workInAdd': Function(NamedParameters([('self', Dyn), ('p', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})

    def __init__(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:68:8: Cannot write to attribute work_in in value %s because it is not an object. (code NON_OBJECT_WRITE)').work_in = retic_cast(None, Void, Dyn, '\n.\\Richard899.py:68:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:69:8: Cannot write to attribute device_in in value %s because it is not an object. (code NON_OBJECT_WRITE)').device_in = retic_cast(None, Void, Dyn, '\n.\\Richard899.py:69:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')

    def workInAdd(self, p):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:72:8: Cannot write to attribute work_in in value %s because it is not an object. (code NON_OBJECT_WRITE)').work_in = retic_cast(retic_cast(p, Dyn, Object('', {'append_to': Dyn, }), '\n.\\Richard899.py:72:23: Accessing nonexistant object attribute append_to from value %s. (code WIDTH_DOWNCAST)').append_to, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:72:23: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(self, Dyn, Object('', {'work_in': Dyn, }), '\n.\\Richard899.py:72:35: Accessing nonexistant object attribute work_in from value %s. (code WIDTH_DOWNCAST)').work_in)
        return retic_cast(self, Dyn, Object('', {'work_in': Dyn, }), '\n.\\Richard899.py:73:15: Accessing nonexistant object attribute work_in from value %s. (code WIDTH_DOWNCAST)').work_in

    def deviceInAdd(self, p):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:76:8: Cannot write to attribute device_in in value %s because it is not an object. (code NON_OBJECT_WRITE)').device_in = retic_cast(retic_cast(p, Dyn, Object('', {'append_to': Dyn, }), '\n.\\Richard899.py:76:25: Accessing nonexistant object attribute append_to from value %s. (code WIDTH_DOWNCAST)').append_to, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:76:25: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(self, Dyn, Object('', {'device_in': Dyn, }), '\n.\\Richard899.py:76:37: Accessing nonexistant object attribute device_in from value %s. (code WIDTH_DOWNCAST)').device_in)
        return retic_cast(self, Dyn, Object('', {'device_in': Dyn, }), '\n.\\Richard899.py:77:15: Accessing nonexistant object attribute device_in from value %s. (code WIDTH_DOWNCAST)').device_in


class WorkerTaskRec(retic_actual(TaskRec)):
    retic_class_type = Class('WorkerTaskRec', {'__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})

    def __init__(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:83:8: Cannot write to attribute destination in value %s because it is not an object. (code NON_OBJECT_WRITE)').destination = retic_cast(I_HANDLERA, Int, Dyn, '\n.\\Richard899.py:83:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:84:8: Cannot write to attribute count in value %s because it is not an object. (code NON_OBJECT_WRITE)').count = retic_cast(0, Int, Dyn, '\n.\\Richard899.py:84:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')


class TaskState(retic_actual(object)):
    retic_class_type = Class('TaskState', {'isWaitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHolding': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isPacketPending': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'running': Function(NamedParameters([('self', Dyn)]), Dyn), 'waiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'packetPending': Function(NamedParameters([('self', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})

    def __init__(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:91:8: Cannot write to attribute packet_pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').packet_pending = retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:91:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:92:8: Cannot write to attribute task_waiting in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_waiting = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:92:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:93:8: Cannot write to attribute task_holding in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_holding = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:93:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')

    def packetPending(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:96:8: Cannot write to attribute packet_pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').packet_pending = retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:96:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:97:8: Cannot write to attribute task_waiting in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_waiting = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:97:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:98:8: Cannot write to attribute task_holding in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_holding = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:98:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        return self

    def waiting(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:102:8: Cannot write to attribute packet_pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').packet_pending = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:102:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:103:8: Cannot write to attribute task_waiting in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_waiting = retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:103:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:104:8: Cannot write to attribute task_holding in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_holding = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:104:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        return self

    def running(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:108:8: Cannot write to attribute packet_pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').packet_pending = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:108:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:109:8: Cannot write to attribute task_waiting in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_waiting = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:109:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:110:8: Cannot write to attribute task_holding in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_holding = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:110:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        return self

    def waitingWithPacket(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:114:8: Cannot write to attribute packet_pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').packet_pending = retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:114:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:115:8: Cannot write to attribute task_waiting in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_waiting = retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:115:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:116:8: Cannot write to attribute task_holding in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_holding = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:116:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        return self

    def isPacketPending(self):
        return retic_cast(self, Dyn, Object('', {'packet_pending': Dyn, }), '\n.\\Richard899.py:120:15: Accessing nonexistant object attribute packet_pending from value %s. (code WIDTH_DOWNCAST)').packet_pending

    def isTaskWaiting(self):
        return retic_cast(self, Dyn, Object('', {'task_waiting': Dyn, }), '\n.\\Richard899.py:123:15: Accessing nonexistant object attribute task_waiting from value %s. (code WIDTH_DOWNCAST)').task_waiting

    def isTaskHolding(self):
        return retic_cast(self, Dyn, Object('', {'task_holding': Dyn, }), '\n.\\Richard899.py:126:15: Accessing nonexistant object attribute task_holding from value %s. (code WIDTH_DOWNCAST)').task_holding

    def isTaskHoldingOrWaiting(self):
        return (retic_cast(self, Dyn, Object('', {'task_holding': Dyn, }), '\n.\\Richard899.py:129:15: Accessing nonexistant object attribute task_holding from value %s. (code WIDTH_DOWNCAST)').task_holding or ((not retic_cast(self, Dyn, Object('', {'packet_pending': Dyn, }), '\n.\\Richard899.py:129:41: Accessing nonexistant object attribute packet_pending from value %s. (code WIDTH_DOWNCAST)').packet_pending) and retic_cast(self, Dyn, Object('', {'task_waiting': Dyn, }), '\n.\\Richard899.py:129:65: Accessing nonexistant object attribute task_waiting from value %s. (code WIDTH_DOWNCAST)').task_waiting))

    def isWaitingWithPacket(self):
        return (retic_cast(self, Dyn, Object('', {'packet_pending': Dyn, }), '\n.\\Richard899.py:132:15: Accessing nonexistant object attribute packet_pending from value %s. (code WIDTH_DOWNCAST)').packet_pending and retic_cast(self, Dyn, Object('', {'task_waiting': Dyn, }), '\n.\\Richard899.py:132:39: Accessing nonexistant object attribute task_waiting from value %s. (code WIDTH_DOWNCAST)').task_waiting and (not retic_cast(self, Dyn, Object('', {'task_holding': Dyn, }), '\n.\\Richard899.py:132:65: Accessing nonexistant object attribute task_holding from value %s. (code WIDTH_DOWNCAST)').task_holding))
tracing = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:135:0: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
layout = 0

def trace(a):
    global layout
    layout = (layout - 1)
    if (layout <= 0):
        retic_cast(print, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:143:8: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        layout = 50
    retic_cast(print, Dyn, Function(DynParameters, Dyn), '\n.\\Richard899.py:145:4: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(a, end='')
TASKTABSIZE = 10


class TaskWorkArea(retic_actual(object)):
    retic_class_type = Class('TaskWorkArea', {'__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})

    def __init__(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:154:8: Cannot write to attribute taskTab in value %s because it is not an object. (code NON_OBJECT_WRITE)').taskTab = retic_cast([], List(Dyn), Dyn, '\n.\\Richard899.py:154:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:156:8: Cannot write to attribute taskList in value %s because it is not an object. (code NON_OBJECT_WRITE)').taskList = retic_cast(None, Void, Dyn, '\n.\\Richard899.py:156:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:158:8: Cannot write to attribute holdCount in value %s because it is not an object. (code NON_OBJECT_WRITE)').holdCount = retic_cast(0, Int, Dyn, '\n.\\Richard899.py:158:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:159:8: Cannot write to attribute qpktCount in value %s because it is not an object. (code NON_OBJECT_WRITE)').qpktCount = retic_cast(0, Int, Dyn, '\n.\\Richard899.py:159:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
taskWorkArea = retic_cast(TaskWorkArea(), Dyn, Object('TaskWorkArea', {}), "\n.\\Richard899.py:162:15: Constructed object value %s does not match type Object(TaskWorkArea, {}),  expected for instances of Class(TaskWorkArea, {'__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")


class Task(retic_actual(TaskState)):
    retic_class_type = Class('Task', {'isWaitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHolding': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isPacketPending': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'running': Function(NamedParameters([('self', Dyn)]), Dyn), 'waiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'packetPending': Function(NamedParameters([('self', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('i', Dyn), ('p', Dyn), ('w', Dyn), ('initialState', Dyn), ('r', Dyn)]), Dyn), 'findtcb': Function(NamedParameters([('self', Dyn), ('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('self', Dyn), ('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('self', Dyn), ('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'runTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'addPacket': Function(NamedParameters([('self', Dyn), ('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('self', Dyn), ('pkt', Dyn), ('r', Dyn)]), Dyn), }, {})

    def __init__(self, i, p, w, initialState, r):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:167:8: Cannot write to attribute link in value %s because it is not an object. (code NON_OBJECT_WRITE)').link = retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'taskList': Dyn, }), '\n.\\Richard899.py:167:20: Accessing nonexistant object attribute taskList from value %s. (code WIDTH_DOWNCAST)').taskList
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:168:8: Cannot write to attribute ident in value %s because it is not an object. (code NON_OBJECT_WRITE)').ident = i
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:169:8: Cannot write to attribute priority in value %s because it is not an object. (code NON_OBJECT_WRITE)').priority = p
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:170:8: Cannot write to attribute input in value %s because it is not an object. (code NON_OBJECT_WRITE)').input = w
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:172:8: Cannot write to attribute packet_pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').packet_pending = retic_cast(retic_cast(initialState, Dyn, Object('', {'isPacketPending': Dyn, }), '\n.\\Richard899.py:172:30: Accessing nonexistant object attribute isPacketPending from value %s. (code WIDTH_DOWNCAST)').isPacketPending, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:172:30: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:173:8: Cannot write to attribute task_waiting in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_waiting = retic_cast(retic_cast(initialState, Dyn, Object('', {'isTaskWaiting': Dyn, }), '\n.\\Richard899.py:173:28: Accessing nonexistant object attribute isTaskWaiting from value %s. (code WIDTH_DOWNCAST)').isTaskWaiting, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:173:28: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:174:8: Cannot write to attribute task_holding in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_holding = retic_cast(retic_cast(initialState, Dyn, Object('', {'isTaskHolding': Dyn, }), '\n.\\Richard899.py:174:28: Accessing nonexistant object attribute isTaskHolding from value %s. (code WIDTH_DOWNCAST)').isTaskHolding, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:174:28: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:176:8: Cannot write to attribute handle in value %s because it is not an object. (code NON_OBJECT_WRITE)').handle = r
        taskWorkArea.taskList = self
        retic_cast(retic_cast(retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'taskTab': Dyn, }), '\n.\\Richard899.py:179:8: Accessing nonexistant object attribute taskTab from value %s. (code WIDTH_DOWNCAST)').taskTab, Dyn, Object('', {'insert': Dyn, }), '\n.\\Richard899.py:179:8: Accessing nonexistant object attribute insert from value %s. (code WIDTH_DOWNCAST)').insert, Dyn, Function(AnonymousParameters([Dyn, Dyn]), Dyn), "\n.\\Richard899.py:179:8: Expected function of type Function(['Dyn', 'Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(i, self)

    def fn(self, pkt, r):
        raise NotImplementedError

    def addPacket(self, p, old):
        if (retic_cast(self, Dyn, Object('', {'input': Dyn, }), '\n.\\Richard899.py:185:11: Accessing nonexistant object attribute input from value %s. (code WIDTH_DOWNCAST)').input is None):
            retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:186:12: Cannot write to attribute input in value %s because it is not an object. (code NON_OBJECT_WRITE)').input = p
            retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:187:12: Cannot write to attribute packet_pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').packet_pending = retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:187:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            if (retic_cast(self, Dyn, Object('', {'priority': Dyn, }), '\n.\\Richard899.py:188:15: Accessing nonexistant object attribute priority from value %s. (code WIDTH_DOWNCAST)').priority > retic_cast(old, Dyn, Object('', {'priority': Dyn, }), '\n.\\Richard899.py:188:31: Accessing nonexistant object attribute priority from value %s. (code WIDTH_DOWNCAST)').priority):
                return self
        else:
            retic_cast(retic_cast(p, Dyn, Object('', {'append_to': Dyn, }), '\n.\\Richard899.py:191:12: Accessing nonexistant object attribute append_to from value %s. (code WIDTH_DOWNCAST)').append_to, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:191:12: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(self, Dyn, Object('', {'input': Dyn, }), '\n.\\Richard899.py:191:24: Accessing nonexistant object attribute input from value %s. (code WIDTH_DOWNCAST)').input)
        return old

    def runTask(self):
        if retic_cast(retic_cast(self, Dyn, Object('', {'isWaitingWithPacket': Dyn, }), '\n.\\Richard899.py:195:11: Accessing nonexistant object attribute isWaitingWithPacket from value %s. (code WIDTH_DOWNCAST)').isWaitingWithPacket, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:195:11: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')():
            msg = retic_cast(self, Dyn, Object('', {'input': Dyn, }), '\n.\\Richard899.py:196:18: Accessing nonexistant object attribute input from value %s. (code WIDTH_DOWNCAST)').input
            retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:197:12: Cannot write to attribute input in value %s because it is not an object. (code NON_OBJECT_WRITE)').input = retic_cast(msg, Dyn, Object('', {'link': Dyn, }), '\n.\\Richard899.py:197:25: Accessing nonexistant object attribute link from value %s. (code WIDTH_DOWNCAST)').link
            if (retic_cast(self, Dyn, Object('', {'input': Dyn, }), '\n.\\Richard899.py:198:15: Accessing nonexistant object attribute input from value %s. (code WIDTH_DOWNCAST)').input is None):
                retic_cast(retic_cast(self, Dyn, Object('', {'running': Dyn, }), '\n.\\Richard899.py:199:16: Accessing nonexistant object attribute running from value %s. (code WIDTH_DOWNCAST)').running, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:199:16: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
            else:
                retic_cast(retic_cast(self, Dyn, Object('', {'packetPending': Dyn, }), '\n.\\Richard899.py:201:16: Accessing nonexistant object attribute packetPending from value %s. (code WIDTH_DOWNCAST)').packetPending, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:201:16: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        else:
            msg = retic_cast(None, Void, Dyn, '\n.\\Richard899.py:203:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        return retic_cast(retic_cast(self, Dyn, Object('', {'fn': Dyn, }), '\n.\\Richard899.py:205:15: Accessing nonexistant object attribute fn from value %s. (code WIDTH_DOWNCAST)').fn, Dyn, Function(AnonymousParameters([Dyn, Dyn]), Dyn), "\n.\\Richard899.py:205:15: Expected function of type Function(['Dyn', 'Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(msg, retic_cast(self, Dyn, Object('', {'handle': Dyn, }), '\n.\\Richard899.py:205:28: Accessing nonexistant object attribute handle from value %s. (code WIDTH_DOWNCAST)').handle)

    def waitTask(self):
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:208:8: Cannot write to attribute task_waiting in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_waiting = retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:208:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        return self

    def hold(self):
        taskWorkArea.holdCount = (retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'holdCount': Dyn, }), '\n.\\Richard899.py:212:8: Accessing nonexistant object attribute holdCount from value %s. (code WIDTH_DOWNCAST)').holdCount + 1)
        retic_cast(self, Dyn, Object('', {}), '\n.\\Richard899.py:213:8: Cannot write to attribute task_holding in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_holding = retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:213:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        return retic_cast(self, Dyn, Object('', {'link': Dyn, }), '\n.\\Richard899.py:214:15: Accessing nonexistant object attribute link from value %s. (code WIDTH_DOWNCAST)').link

    def release(self, i):
        t = retic_cast(retic_cast(self, Dyn, Object('', {'findtcb': Dyn, }), '\n.\\Richard899.py:217:12: Accessing nonexistant object attribute findtcb from value %s. (code WIDTH_DOWNCAST)').findtcb, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:217:12: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(i)
        retic_cast(t, Dyn, Object('', {}), '\n.\\Richard899.py:218:8: Cannot write to attribute task_holding in value %s because it is not an object. (code NON_OBJECT_WRITE)').task_holding = retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:218:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        if (retic_cast(t, Dyn, Object('', {'priority': Dyn, }), '\n.\\Richard899.py:219:11: Accessing nonexistant object attribute priority from value %s. (code WIDTH_DOWNCAST)').priority > retic_cast(self, Dyn, Object('', {'priority': Dyn, }), '\n.\\Richard899.py:219:24: Accessing nonexistant object attribute priority from value %s. (code WIDTH_DOWNCAST)').priority):
            return t
        else:
            return self

    def qpkt(self, pkt):
        t = retic_cast(retic_cast(self, Dyn, Object('', {'findtcb': Dyn, }), '\n.\\Richard899.py:225:12: Accessing nonexistant object attribute findtcb from value %s. (code WIDTH_DOWNCAST)').findtcb, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:225:12: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(pkt, Dyn, Object('', {'ident': Dyn, }), '\n.\\Richard899.py:225:25: Accessing nonexistant object attribute ident from value %s. (code WIDTH_DOWNCAST)').ident)
        taskWorkArea.qpktCount = (retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'qpktCount': Dyn, }), '\n.\\Richard899.py:226:8: Accessing nonexistant object attribute qpktCount from value %s. (code WIDTH_DOWNCAST)').qpktCount + 1)
        retic_cast(pkt, Dyn, Object('', {}), '\n.\\Richard899.py:227:8: Cannot write to attribute link in value %s because it is not an object. (code NON_OBJECT_WRITE)').link = retic_cast(None, Void, Dyn, '\n.\\Richard899.py:227:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(pkt, Dyn, Object('', {}), '\n.\\Richard899.py:228:8: Cannot write to attribute ident in value %s because it is not an object. (code NON_OBJECT_WRITE)').ident = retic_cast(self, Dyn, Object('', {'ident': Dyn, }), '\n.\\Richard899.py:228:20: Accessing nonexistant object attribute ident from value %s. (code WIDTH_DOWNCAST)').ident
        return retic_cast(retic_cast(t, Dyn, Object('', {'addPacket': Dyn, }), '\n.\\Richard899.py:229:15: Accessing nonexistant object attribute addPacket from value %s. (code WIDTH_DOWNCAST)').addPacket, Dyn, Function(AnonymousParameters([Dyn, Dyn]), Dyn), "\n.\\Richard899.py:229:15: Expected function of type Function(['Dyn', 'Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(pkt, self)

    def findtcb(self, id):
        t = (retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'taskTab': Dyn, }), '\n.\\Richard899.py:232:12: Accessing nonexistant object attribute taskTab from value %s. (code WIDTH_DOWNCAST)').taskTab[id] if (id < len(retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'taskTab': Dyn, }), '\n.\\Richard899.py:232:47: Accessing nonexistant object attribute taskTab from value %s. (code WIDTH_DOWNCAST)').taskTab)) else retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'taskTab': Dyn, }), '\n.\\Richard899.py:232:74: Accessing nonexistant object attribute taskTab from value %s. (code WIDTH_DOWNCAST)').taskTab[(len(retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'taskTab': Dyn, }), '\n.\\Richard899.py:232:99: Accessing nonexistant object attribute taskTab from value %s. (code WIDTH_DOWNCAST)').taskTab) - 1)])
        if (t is None):
            raise retic_cast(Exception, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:234:18: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(('Bad task id %d' % id))
        return t


class DeviceTask(retic_actual(Task)):
    retic_class_type = Class('DeviceTask', {'isWaitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHolding': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isPacketPending': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'running': Function(NamedParameters([('self', Dyn)]), Dyn), 'waiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'packetPending': Function(NamedParameters([('self', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('i', Dyn), ('p', Dyn), ('w', Dyn), ('s', Dyn), ('r', Dyn)]), Dyn), 'findtcb': Function(NamedParameters([('self', Dyn), ('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('self', Dyn), ('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('self', Dyn), ('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'runTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'addPacket': Function(NamedParameters([('self', Dyn), ('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('self', Dyn), ('pkt', Dyn), ('r', Dyn)]), Dyn), }, {})

    def __init__(self, i, p, w, s, r):
        Task.__init__(self, i, p, w, s, r)

    def fn(self, pkt, r):
        d = r
        assert retic_cast(isinstance, Dyn, Function(AnonymousParameters([Dyn, Class('DeviceTaskRec', {'__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})]), Dyn), '\n.\\Richard899.py:244:19: Expected function of type Function([\'Dyn\', "Class(DeviceTaskRec, {\'__init__\': Function([\'self:Dyn\'], Dyn)}, )"], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(d, DeviceTaskRec)
        if (pkt is None):
            pkt = retic_cast(d, Dyn, Object('', {'pending': Dyn, }), '\n.\\Richard899.py:246:22: Accessing nonexistant object attribute pending from value %s. (code WIDTH_DOWNCAST)').pending
            if (pkt is None):
                return retic_cast(retic_cast(self, Dyn, Object('', {'waitTask': Dyn, }), '\n.\\Richard899.py:248:27: Accessing nonexistant object attribute waitTask from value %s. (code WIDTH_DOWNCAST)').waitTask, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:248:27: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
            else:
                retic_cast(d, Dyn, Object('', {}), '\n.\\Richard899.py:250:20: Cannot write to attribute pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').pending = retic_cast(None, Void, Dyn, '\n.\\Richard899.py:250:20: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
                return retic_cast(retic_cast(self, Dyn, Object('', {'qpkt': Dyn, }), '\n.\\Richard899.py:251:27: Accessing nonexistant object attribute qpkt from value %s. (code WIDTH_DOWNCAST)').qpkt, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:251:27: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(pkt)
        else:
            retic_cast(d, Dyn, Object('', {}), '\n.\\Richard899.py:253:16: Cannot write to attribute pending in value %s because it is not an object. (code NON_OBJECT_WRITE)').pending = pkt
            if tracing:
                trace(retic_cast(pkt, Dyn, Object('', {'datum': Dyn, }), '\n.\\Richard899.py:255:26: Accessing nonexistant object attribute datum from value %s. (code WIDTH_DOWNCAST)').datum)
            return retic_cast(retic_cast(self, Dyn, Object('', {'hold': Dyn, }), '\n.\\Richard899.py:256:23: Accessing nonexistant object attribute hold from value %s. (code WIDTH_DOWNCAST)').hold, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:256:23: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()


class HandlerTask(retic_actual(Task)):
    retic_class_type = Class('HandlerTask', {'isWaitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHolding': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isPacketPending': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'running': Function(NamedParameters([('self', Dyn)]), Dyn), 'waiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'packetPending': Function(NamedParameters([('self', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('i', Dyn), ('p', Dyn), ('w', Dyn), ('s', Dyn), ('r', Dyn)]), Dyn), 'findtcb': Function(NamedParameters([('self', Dyn), ('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('self', Dyn), ('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('self', Dyn), ('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'runTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'addPacket': Function(NamedParameters([('self', Dyn), ('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('self', Dyn), ('pkt', Dyn), ('r', Dyn)]), Dyn), }, {})

    def __init__(self, i, p, w, s, r):
        Task.__init__(self, i, p, w, s, r)

    def fn(self, pkt, r):
        h = r
        assert retic_cast(isinstance, Dyn, Function(AnonymousParameters([Dyn, Class('HandlerTaskRec', {'deviceInAdd': Function(NamedParameters([('self', Dyn), ('p', Dyn)]), Dyn), 'workInAdd': Function(NamedParameters([('self', Dyn), ('p', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})]), Dyn), '\n.\\Richard899.py:263:19: Expected function of type Function([\'Dyn\', "Class(HandlerTaskRec, {\'deviceInAdd\': Function([\'self:Dyn\', \'p:Dyn\'], Dyn), \'workInAdd\': Function([\'self:Dyn\', \'p:Dyn\'], Dyn), \'__init__\': Function([\'self:Dyn\'], Dyn)}, )"], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(h, HandlerTaskRec)
        if (pkt is not None):
            if (retic_cast(pkt, Dyn, Object('', {'kind': Dyn, }), '\n.\\Richard899.py:265:19: Accessing nonexistant object attribute kind from value %s. (code WIDTH_DOWNCAST)').kind == K_WORK):
                retic_cast(retic_cast(h, Dyn, Object('', {'workInAdd': Dyn, }), '\n.\\Richard899.py:266:20: Accessing nonexistant object attribute workInAdd from value %s. (code WIDTH_DOWNCAST)').workInAdd, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:266:20: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(pkt)
            else:
                retic_cast(retic_cast(h, Dyn, Object('', {'deviceInAdd': Dyn, }), '\n.\\Richard899.py:268:20: Accessing nonexistant object attribute deviceInAdd from value %s. (code WIDTH_DOWNCAST)').deviceInAdd, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:268:20: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(pkt)
        work = retic_cast(h, Dyn, Object('', {'work_in': Dyn, }), '\n.\\Richard899.py:269:19: Accessing nonexistant object attribute work_in from value %s. (code WIDTH_DOWNCAST)').work_in
        if (work is None):
            return retic_cast(retic_cast(self, Dyn, Object('', {'waitTask': Dyn, }), '\n.\\Richard899.py:271:23: Accessing nonexistant object attribute waitTask from value %s. (code WIDTH_DOWNCAST)').waitTask, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:271:23: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        count = retic_cast(work, Dyn, Object('', {'datum': Dyn, }), '\n.\\Richard899.py:272:20: Accessing nonexistant object attribute datum from value %s. (code WIDTH_DOWNCAST)').datum
        if (count >= BUFSIZE):
            retic_cast(h, Dyn, Object('', {}), '\n.\\Richard899.py:274:16: Cannot write to attribute work_in in value %s because it is not an object. (code NON_OBJECT_WRITE)').work_in = retic_cast(work, Dyn, Object('', {'link': Dyn, }), '\n.\\Richard899.py:274:28: Accessing nonexistant object attribute link from value %s. (code WIDTH_DOWNCAST)').link
            return retic_cast(retic_cast(self, Dyn, Object('', {'qpkt': Dyn, }), '\n.\\Richard899.py:275:23: Accessing nonexistant object attribute qpkt from value %s. (code WIDTH_DOWNCAST)').qpkt, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:275:23: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(work)
        dev = retic_cast(h, Dyn, Object('', {'device_in': Dyn, }), '\n.\\Richard899.py:277:18: Accessing nonexistant object attribute device_in from value %s. (code WIDTH_DOWNCAST)').device_in
        if (dev is None):
            return retic_cast(retic_cast(self, Dyn, Object('', {'waitTask': Dyn, }), '\n.\\Richard899.py:279:23: Accessing nonexistant object attribute waitTask from value %s. (code WIDTH_DOWNCAST)').waitTask, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:279:23: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        retic_cast(h, Dyn, Object('', {}), '\n.\\Richard899.py:281:12: Cannot write to attribute device_in in value %s because it is not an object. (code NON_OBJECT_WRITE)').device_in = retic_cast(dev, Dyn, Object('', {'link': Dyn, }), '\n.\\Richard899.py:281:26: Accessing nonexistant object attribute link from value %s. (code WIDTH_DOWNCAST)').link
        retic_cast(dev, Dyn, Object('', {}), '\n.\\Richard899.py:282:12: Cannot write to attribute datum in value %s because it is not an object. (code NON_OBJECT_WRITE)').datum = retic_cast(work, Dyn, Object('', {'data': Dyn, }), '\n.\\Richard899.py:282:24: Accessing nonexistant object attribute data from value %s. (code WIDTH_DOWNCAST)').data[count]
        retic_cast(work, Dyn, Object('', {}), '\n.\\Richard899.py:283:12: Cannot write to attribute datum in value %s because it is not an object. (code NON_OBJECT_WRITE)').datum = (count + 1)
        return retic_cast(retic_cast(self, Dyn, Object('', {'qpkt': Dyn, }), '\n.\\Richard899.py:284:19: Accessing nonexistant object attribute qpkt from value %s. (code WIDTH_DOWNCAST)').qpkt, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:284:19: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(dev)


class IdleTask(retic_actual(Task)):
    retic_class_type = Class('IdleTask', {'isWaitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHolding': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isPacketPending': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'running': Function(NamedParameters([('self', Dyn)]), Dyn), 'waiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'packetPending': Function(NamedParameters([('self', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('i', Dyn), ('p', Dyn), ('w', Dyn), ('s', Dyn), ('r', Dyn)]), Dyn), 'findtcb': Function(NamedParameters([('self', Dyn), ('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('self', Dyn), ('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('self', Dyn), ('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'runTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'addPacket': Function(NamedParameters([('self', Dyn), ('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('self', Dyn), ('pkt', Dyn), ('r', Dyn)]), Dyn), }, {})

    def __init__(self, i, p, w, s, r):
        Task.__init__(self, i, retic_cast(0, Int, Dyn, '\n.\\Richard899.py:287:8: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(None, Void, Dyn, '\n.\\Richard899.py:287:8: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), s, r)

    def fn(self, pkt, r):
        i = r
        assert retic_cast(isinstance, Dyn, Function(AnonymousParameters([Dyn, Class('IdleTaskRec', {'__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})]), Dyn), '\n.\\Richard899.py:290:15: Expected function of type Function([\'Dyn\', "Class(IdleTaskRec, {\'__init__\': Function([\'self:Dyn\'], Dyn)}, )"], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(i, IdleTaskRec)
        retic_cast(i, Dyn, Object('', {}), '\n.\\Richard899.py:291:8: Cannot write to attribute count in value %s because it is not an object. (code NON_OBJECT_WRITE)').count = (retic_cast(i, Dyn, Object('', {'count': Dyn, }), '\n.\\Richard899.py:291:8: Accessing nonexistant object attribute count from value %s. (code WIDTH_DOWNCAST)').count - 1)
        if (retic_cast(i, Dyn, Object('', {'count': Dyn, }), '\n.\\Richard899.py:292:11: Accessing nonexistant object attribute count from value %s. (code WIDTH_DOWNCAST)').count == 0):
            return retic_cast(retic_cast(self, Dyn, Object('', {'hold': Dyn, }), '\n.\\Richard899.py:293:19: Accessing nonexistant object attribute hold from value %s. (code WIDTH_DOWNCAST)').hold, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:293:19: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        elif ((retic_cast(i, Dyn, Object('', {'control': Dyn, }), '\n.\\Richard899.py:294:13: Accessing nonexistant object attribute control from value %s. (code WIDTH_DOWNCAST)').control & 1) == 0):
            retic_cast(i, Dyn, Object('', {}), '\n.\\Richard899.py:295:12: Cannot write to attribute control in value %s because it is not an object. (code NON_OBJECT_WRITE)').control = (retic_cast(i, Dyn, Object('', {'control': Dyn, }), '\n.\\Richard899.py:295:12: Accessing nonexistant object attribute control from value %s. (code WIDTH_DOWNCAST)').control // 2)
            return retic_cast(retic_cast(self, Dyn, Object('', {'release': Dyn, }), '\n.\\Richard899.py:296:19: Accessing nonexistant object attribute release from value %s. (code WIDTH_DOWNCAST)').release, Dyn, Function(AnonymousParameters([Int]), Dyn), "\n.\\Richard899.py:296:19: Expected function of type Function(['Int'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(I_DEVA)
        else:
            retic_cast(i, Dyn, Object('', {}), '\n.\\Richard899.py:298:12: Cannot write to attribute control in value %s because it is not an object. (code NON_OBJECT_WRITE)').control = ((retic_cast(i, Dyn, Object('', {'control': Dyn, }), '\n.\\Richard899.py:298:24: Accessing nonexistant object attribute control from value %s. (code WIDTH_DOWNCAST)').control // 2) ^ 53256)
            return retic_cast(retic_cast(self, Dyn, Object('', {'release': Dyn, }), '\n.\\Richard899.py:299:19: Accessing nonexistant object attribute release from value %s. (code WIDTH_DOWNCAST)').release, Dyn, Function(AnonymousParameters([Int]), Dyn), "\n.\\Richard899.py:299:19: Expected function of type Function(['Int'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(I_DEVB)
A = retic_cast(ord, Dyn, Function(AnonymousParameters([String]), Dyn), "\n.\\Richard899.py:300:4: Expected function of type Function(['String'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")('A')


class WorkTask(retic_actual(Task)):
    retic_class_type = Class('WorkTask', {'isWaitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskHolding': Function(NamedParameters([('self', Dyn)]), Dyn), 'isTaskWaiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'isPacketPending': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitingWithPacket': Function(NamedParameters([('self', Dyn)]), Dyn), 'running': Function(NamedParameters([('self', Dyn)]), Dyn), 'waiting': Function(NamedParameters([('self', Dyn)]), Dyn), 'packetPending': Function(NamedParameters([('self', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('i', Dyn), ('p', Dyn), ('w', Dyn), ('s', Dyn), ('r', Dyn)]), Dyn), 'findtcb': Function(NamedParameters([('self', Dyn), ('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('self', Dyn), ('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('self', Dyn), ('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([('self', Dyn)]), Dyn), 'waitTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'runTask': Function(NamedParameters([('self', Dyn)]), Dyn), 'addPacket': Function(NamedParameters([('self', Dyn), ('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('self', Dyn), ('pkt', Dyn), ('r', Dyn)]), Dyn), }, {})

    def __init__(self, i, p, w, s, r):
        Task.__init__(self, i, p, w, s, r)

    def fn(self, pkt, r):
        CIDict['localci2'] = 0
        w = r
        assert retic_cast(isinstance, Dyn, Function(AnonymousParameters([Dyn, Class('WorkerTaskRec', {'__init__': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})]), Dyn), '\n.\\Richard899.py:307:15: Expected function of type Function([\'Dyn\', "Class(WorkerTaskRec, {\'__init__\': Function([\'self:Dyn\'], Dyn)}, )"], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(w, WorkerTaskRec)
        if (pkt is None):
            return retic_cast(retic_cast(self, Dyn, Object('', {'waitTask': Dyn, }), '\n.\\Richard899.py:309:19: Accessing nonexistant object attribute waitTask from value %s. (code WIDTH_DOWNCAST)').waitTask, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:309:19: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        if (retic_cast(w, Dyn, Object('', {'destination': Dyn, }), '\n.\\Richard899.py:311:11: Accessing nonexistant object attribute destination from value %s. (code WIDTH_DOWNCAST)').destination == I_HANDLERA):
            dest = I_HANDLERB
        else:
            dest = I_HANDLERA
        retic_cast(w, Dyn, Object('', {}), '\n.\\Richard899.py:316:8: Cannot write to attribute destination in value %s because it is not an object. (code NON_OBJECT_WRITE)').destination = retic_cast(dest, Int, Dyn, '\n.\\Richard899.py:316:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(pkt, Dyn, Object('', {}), '\n.\\Richard899.py:317:8: Cannot write to attribute ident in value %s because it is not an object. (code NON_OBJECT_WRITE)').ident = retic_cast(dest, Int, Dyn, '\n.\\Richard899.py:317:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        retic_cast(pkt, Dyn, Object('', {}), '\n.\\Richard899.py:318:8: Cannot write to attribute datum in value %s because it is not an object. (code NON_OBJECT_WRITE)').datum = retic_cast(0, Int, Dyn, '\n.\\Richard899.py:318:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        for i in BUFSIZE_RANGE:
            CIDict['fci2'] += 1
            CIDict['localci2'] += 1
            retic_cast(w, Dyn, Object('', {}), '\n.\\Richard899.py:321:12: Cannot write to attribute count in value %s because it is not an object. (code NON_OBJECT_WRITE)').count = (retic_cast(w, Dyn, Object('', {'count': Dyn, }), '\n.\\Richard899.py:321:12: Accessing nonexistant object attribute count from value %s. (code WIDTH_DOWNCAST)').count + 1)
            if (retic_cast(w, Dyn, Object('', {'count': Dyn, }), '\n.\\Richard899.py:322:15: Accessing nonexistant object attribute count from value %s. (code WIDTH_DOWNCAST)').count > 26):
                retic_cast(w, Dyn, Object('', {}), '\n.\\Richard899.py:323:16: Cannot write to attribute count in value %s because it is not an object. (code NON_OBJECT_WRITE)').count = retic_cast(1, Int, Dyn, '\n.\\Richard899.py:323:16: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            retic_cast(pkt, Dyn, Object('', {'data': Dyn, }), '\n.\\Richard899.py:324:12: Accessing nonexistant object attribute data from value %s. (code WIDTH_DOWNCAST)').data[i] = ((A + retic_cast(w, Dyn, Object('', {'count': Dyn, }), '\n.\\Richard899.py:324:30: Accessing nonexistant object attribute count from value %s. (code WIDTH_DOWNCAST)').count) - 1)
        return retic_cast(retic_cast(self, Dyn, Object('', {'qpkt': Dyn, }), '\n.\\Richard899.py:326:15: Accessing nonexistant object attribute qpkt from value %s. (code WIDTH_DOWNCAST)').qpkt, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:326:15: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(pkt)

def schedule():
    CIDict['localci3'] = 0
    t = retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'taskList': Dyn, }), '\n.\\Richard899.py:330:8: Accessing nonexistant object attribute taskList from value %s. (code WIDTH_DOWNCAST)').taskList
    while (t is not None):
        CIDict['fci3'] += 1
        CIDict['localci3'] += 1
        if tracing:
            retic_cast(print, Dyn, Function(AnonymousParameters([String, Dyn]), Dyn), "\n.\\Richard899.py:333:12: Expected function of type Function(['String', 'Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")('tcb =', retic_cast(t, Dyn, Object('', {'ident': Dyn, }), '\n.\\Richard899.py:333:27: Accessing nonexistant object attribute ident from value %s. (code WIDTH_DOWNCAST)').ident)
        if retic_cast(retic_cast(t, Dyn, Object('', {'isTaskHoldingOrWaiting': Dyn, }), '\n.\\Richard899.py:335:11: Accessing nonexistant object attribute isTaskHoldingOrWaiting from value %s. (code WIDTH_DOWNCAST)').isTaskHoldingOrWaiting, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:335:11: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')():
            t = retic_cast(t, Dyn, Object('', {'link': Dyn, }), '\n.\\Richard899.py:336:16: Accessing nonexistant object attribute link from value %s. (code WIDTH_DOWNCAST)').link
        else:
            if tracing:
                trace(retic_cast(chr, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:339:22: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")((retic_cast(ord, Dyn, Function(AnonymousParameters([String]), Dyn), "\n.\\Richard899.py:339:26: Expected function of type Function(['String'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")('0') + retic_cast(t, Dyn, Object('', {'ident': Dyn, }), '\n.\\Richard899.py:339:37: Accessing nonexistant object attribute ident from value %s. (code WIDTH_DOWNCAST)').ident)))
            t = retic_cast(retic_cast(t, Dyn, Object('', {'runTask': Dyn, }), '\n.\\Richard899.py:340:16: Accessing nonexistant object attribute runTask from value %s. (code WIDTH_DOWNCAST)').runTask, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:340:16: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()


class Richards(retic_actual(object)):
    retic_class_type = Class('Richards', {'run': Function(NamedParameters([('self', Dyn), ('iterations', Dyn)]), Dyn), }, {})

    def run(self, iterations):
        CIDict['localci4'] = 0
        for i in retic_cast(range(iterations), Iterable(Dyn), Dyn, '\n.\\Richard899.py:345:8: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)'):
            CIDict['fci4'] += 1
            CIDict['localci4'] += 1
            taskWorkArea.holdCount = retic_cast(0, Int, Dyn, '\n.\\Richard899.py:346:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            taskWorkArea.qpktCount = retic_cast(0, Int, Dyn, '\n.\\Richard899.py:347:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            retic_cast(IdleTask(retic_cast(I_IDLE, Int, Dyn, '\n.\\Richard899.py:349:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(1, Int, Dyn, '\n.\\Richard899.py:349:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(10000, Int, Dyn, '\n.\\Richard899.py:349:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(TaskState(), Dyn, Object('TaskState', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), }), "\n.\\Richard899.py:349:39: Constructed object value %s does not match type Object(TaskState, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn)}),  expected for instances of Class(TaskState, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)").running(), retic_cast(retic_cast(IdleTaskRec(), Dyn, Object('IdleTaskRec', {}), "\n.\\Richard899.py:349:62: Constructed object value %s does not match type Object(IdleTaskRec, {}),  expected for instances of Class(IdleTaskRec, {'__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('IdleTaskRec', {}), Dyn, '\n.\\Richard899.py:349:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('IdleTask', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), 'findtcb': Function(NamedParameters([('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([]), Dyn), 'waitTask': Function(NamedParameters([]), Dyn), 'runTask': Function(NamedParameters([]), Dyn), 'addPacket': Function(NamedParameters([('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('pkt', Dyn), ('r', Dyn)]), Dyn), }), "\n.\\Richard899.py:349:12: Constructed object value %s does not match type Object(IdleTask, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn), 'findtcb': Function(['id:Dyn'], Dyn), 'qpkt': Function(['pkt:Dyn'], Dyn), 'release': Function(['i:Dyn'], Dyn), 'hold': Function([], Dyn), 'waitTask': Function([], Dyn), 'runTask': Function([], Dyn), 'addPacket': Function(['p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['pkt:Dyn', 'r:Dyn'], Dyn)}),  expected for instances of Class(IdleTask, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'i:Dyn', 'p:Dyn', 'w:Dyn', 's:Dyn', 'r:Dyn'], Dyn), 'findtcb': Function(['self:Dyn', 'id:Dyn'], Dyn), 'qpkt': Function(['self:Dyn', 'pkt:Dyn'], Dyn), 'release': Function(['self:Dyn', 'i:Dyn'], Dyn), 'hold': Function(['self:Dyn'], Dyn), 'waitTask': Function(['self:Dyn'], Dyn), 'runTask': Function(['self:Dyn'], Dyn), 'addPacket': Function(['self:Dyn', 'p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['self:Dyn', 'pkt:Dyn', 'r:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")
            wkq = retic_cast(retic_cast(Packet(retic_cast(None, Void, Dyn, '\n.\\Richard899.py:351:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(0, Int, Dyn, '\n.\\Richard899.py:351:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(K_WORK, Int, Dyn, '\n.\\Richard899.py:351:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), "\n.\\Richard899.py:351:18: Constructed object value %s does not match type Object(Packet, {'append_to': Function(['lst:Dyn'], Dyn)}),  expected for instances of Class(Packet, {'append_to': Function(['self:Dyn', 'lst:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'l:Dyn', 'i:Dyn', 'k:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:351:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            wkq = retic_cast(retic_cast(Packet(wkq, retic_cast(0, Int, Dyn, '\n.\\Richard899.py:352:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(K_WORK, Int, Dyn, '\n.\\Richard899.py:352:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), "\n.\\Richard899.py:352:18: Constructed object value %s does not match type Object(Packet, {'append_to': Function(['lst:Dyn'], Dyn)}),  expected for instances of Class(Packet, {'append_to': Function(['self:Dyn', 'lst:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'l:Dyn', 'i:Dyn', 'k:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:352:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            retic_cast(WorkTask(retic_cast(I_WORK, Int, Dyn, '\n.\\Richard899.py:353:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(1000, Int, Dyn, '\n.\\Richard899.py:353:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), wkq, retic_cast(TaskState(), Dyn, Object('TaskState', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), }), "\n.\\Richard899.py:353:40: Constructed object value %s does not match type Object(TaskState, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn)}),  expected for instances of Class(TaskState, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)").waitingWithPacket(), retic_cast(retic_cast(WorkerTaskRec(), Dyn, Object('WorkerTaskRec', {}), "\n.\\Richard899.py:354:35: Constructed object value %s does not match type Object(WorkerTaskRec, {}),  expected for instances of Class(WorkerTaskRec, {'__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('WorkerTaskRec', {}), Dyn, '\n.\\Richard899.py:353:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('WorkTask', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), 'findtcb': Function(NamedParameters([('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([]), Dyn), 'waitTask': Function(NamedParameters([]), Dyn), 'runTask': Function(NamedParameters([]), Dyn), 'addPacket': Function(NamedParameters([('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('pkt', Dyn), ('r', Dyn)]), Dyn), }), "\n.\\Richard899.py:353:12: Constructed object value %s does not match type Object(WorkTask, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn), 'findtcb': Function(['id:Dyn'], Dyn), 'qpkt': Function(['pkt:Dyn'], Dyn), 'release': Function(['i:Dyn'], Dyn), 'hold': Function([], Dyn), 'waitTask': Function([], Dyn), 'runTask': Function([], Dyn), 'addPacket': Function(['p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['pkt:Dyn', 'r:Dyn'], Dyn)}),  expected for instances of Class(WorkTask, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'i:Dyn', 'p:Dyn', 'w:Dyn', 's:Dyn', 'r:Dyn'], Dyn), 'findtcb': Function(['self:Dyn', 'id:Dyn'], Dyn), 'qpkt': Function(['self:Dyn', 'pkt:Dyn'], Dyn), 'release': Function(['self:Dyn', 'i:Dyn'], Dyn), 'hold': Function(['self:Dyn'], Dyn), 'waitTask': Function(['self:Dyn'], Dyn), 'runTask': Function(['self:Dyn'], Dyn), 'addPacket': Function(['self:Dyn', 'p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['self:Dyn', 'pkt:Dyn', 'r:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")
            wkq = retic_cast(retic_cast(Packet(retic_cast(None, Void, Dyn, '\n.\\Richard899.py:356:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(I_DEVA, Int, Dyn, '\n.\\Richard899.py:356:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(K_DEV, Int, Dyn, '\n.\\Richard899.py:356:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), "\n.\\Richard899.py:356:18: Constructed object value %s does not match type Object(Packet, {'append_to': Function(['lst:Dyn'], Dyn)}),  expected for instances of Class(Packet, {'append_to': Function(['self:Dyn', 'lst:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'l:Dyn', 'i:Dyn', 'k:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:356:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            wkq = retic_cast(retic_cast(Packet(wkq, retic_cast(I_DEVA, Int, Dyn, '\n.\\Richard899.py:357:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(K_DEV, Int, Dyn, '\n.\\Richard899.py:357:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), "\n.\\Richard899.py:357:18: Constructed object value %s does not match type Object(Packet, {'append_to': Function(['lst:Dyn'], Dyn)}),  expected for instances of Class(Packet, {'append_to': Function(['self:Dyn', 'lst:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'l:Dyn', 'i:Dyn', 'k:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:357:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            wkq = retic_cast(retic_cast(Packet(wkq, retic_cast(I_DEVA, Int, Dyn, '\n.\\Richard899.py:358:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(K_DEV, Int, Dyn, '\n.\\Richard899.py:358:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), "\n.\\Richard899.py:358:18: Constructed object value %s does not match type Object(Packet, {'append_to': Function(['lst:Dyn'], Dyn)}),  expected for instances of Class(Packet, {'append_to': Function(['self:Dyn', 'lst:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'l:Dyn', 'i:Dyn', 'k:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:358:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            retic_cast(HandlerTask(retic_cast(I_HANDLERA, Int, Dyn, '\n.\\Richard899.py:359:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(2000, Int, Dyn, '\n.\\Richard899.py:359:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), wkq, retic_cast(TaskState(), Dyn, Object('TaskState', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), }), "\n.\\Richard899.py:359:47: Constructed object value %s does not match type Object(TaskState, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn)}),  expected for instances of Class(TaskState, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)").waitingWithPacket(), retic_cast(retic_cast(HandlerTaskRec(), Dyn, Object('HandlerTaskRec', {'deviceInAdd': Function(NamedParameters([('p', Dyn)]), Dyn), 'workInAdd': Function(NamedParameters([('p', Dyn)]), Dyn), }), "\n.\\Richard899.py:360:35: Constructed object value %s does not match type Object(HandlerTaskRec, {'deviceInAdd': Function(['p:Dyn'], Dyn), 'workInAdd': Function(['p:Dyn'], Dyn)}),  expected for instances of Class(HandlerTaskRec, {'deviceInAdd': Function(['self:Dyn', 'p:Dyn'], Dyn), 'workInAdd': Function(['self:Dyn', 'p:Dyn'], Dyn), '__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('HandlerTaskRec', {'deviceInAdd': Function(NamedParameters([('p', Dyn)]), Dyn), 'workInAdd': Function(NamedParameters([('p', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:359:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('HandlerTask', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), 'findtcb': Function(NamedParameters([('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([]), Dyn), 'waitTask': Function(NamedParameters([]), Dyn), 'runTask': Function(NamedParameters([]), Dyn), 'addPacket': Function(NamedParameters([('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('pkt', Dyn), ('r', Dyn)]), Dyn), }), "\n.\\Richard899.py:359:12: Constructed object value %s does not match type Object(HandlerTask, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn), 'findtcb': Function(['id:Dyn'], Dyn), 'qpkt': Function(['pkt:Dyn'], Dyn), 'release': Function(['i:Dyn'], Dyn), 'hold': Function([], Dyn), 'waitTask': Function([], Dyn), 'runTask': Function([], Dyn), 'addPacket': Function(['p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['pkt:Dyn', 'r:Dyn'], Dyn)}),  expected for instances of Class(HandlerTask, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'i:Dyn', 'p:Dyn', 'w:Dyn', 's:Dyn', 'r:Dyn'], Dyn), 'findtcb': Function(['self:Dyn', 'id:Dyn'], Dyn), 'qpkt': Function(['self:Dyn', 'pkt:Dyn'], Dyn), 'release': Function(['self:Dyn', 'i:Dyn'], Dyn), 'hold': Function(['self:Dyn'], Dyn), 'waitTask': Function(['self:Dyn'], Dyn), 'runTask': Function(['self:Dyn'], Dyn), 'addPacket': Function(['self:Dyn', 'p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['self:Dyn', 'pkt:Dyn', 'r:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")
            wkq = retic_cast(retic_cast(Packet(retic_cast(None, Void, Dyn, '\n.\\Richard899.py:362:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(I_DEVB, Int, Dyn, '\n.\\Richard899.py:362:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(K_DEV, Int, Dyn, '\n.\\Richard899.py:362:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), "\n.\\Richard899.py:362:18: Constructed object value %s does not match type Object(Packet, {'append_to': Function(['lst:Dyn'], Dyn)}),  expected for instances of Class(Packet, {'append_to': Function(['self:Dyn', 'lst:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'l:Dyn', 'i:Dyn', 'k:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:362:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            wkq = retic_cast(retic_cast(Packet(wkq, retic_cast(I_DEVB, Int, Dyn, '\n.\\Richard899.py:363:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(K_DEV, Int, Dyn, '\n.\\Richard899.py:363:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), "\n.\\Richard899.py:363:18: Constructed object value %s does not match type Object(Packet, {'append_to': Function(['lst:Dyn'], Dyn)}),  expected for instances of Class(Packet, {'append_to': Function(['self:Dyn', 'lst:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'l:Dyn', 'i:Dyn', 'k:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:363:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            wkq = retic_cast(retic_cast(Packet(wkq, retic_cast(I_DEVB, Int, Dyn, '\n.\\Richard899.py:364:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(K_DEV, Int, Dyn, '\n.\\Richard899.py:364:18: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), "\n.\\Richard899.py:364:18: Constructed object value %s does not match type Object(Packet, {'append_to': Function(['lst:Dyn'], Dyn)}),  expected for instances of Class(Packet, {'append_to': Function(['self:Dyn', 'lst:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'l:Dyn', 'i:Dyn', 'k:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('Packet', {'append_to': Function(NamedParameters([('lst', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:364:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            retic_cast(HandlerTask(retic_cast(I_HANDLERB, Int, Dyn, '\n.\\Richard899.py:365:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(3000, Int, Dyn, '\n.\\Richard899.py:365:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), wkq, retic_cast(TaskState(), Dyn, Object('TaskState', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), }), "\n.\\Richard899.py:365:47: Constructed object value %s does not match type Object(TaskState, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn)}),  expected for instances of Class(TaskState, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)").waitingWithPacket(), retic_cast(retic_cast(HandlerTaskRec(), Dyn, Object('HandlerTaskRec', {'deviceInAdd': Function(NamedParameters([('p', Dyn)]), Dyn), 'workInAdd': Function(NamedParameters([('p', Dyn)]), Dyn), }), "\n.\\Richard899.py:366:35: Constructed object value %s does not match type Object(HandlerTaskRec, {'deviceInAdd': Function(['p:Dyn'], Dyn), 'workInAdd': Function(['p:Dyn'], Dyn)}),  expected for instances of Class(HandlerTaskRec, {'deviceInAdd': Function(['self:Dyn', 'p:Dyn'], Dyn), 'workInAdd': Function(['self:Dyn', 'p:Dyn'], Dyn), '__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('HandlerTaskRec', {'deviceInAdd': Function(NamedParameters([('p', Dyn)]), Dyn), 'workInAdd': Function(NamedParameters([('p', Dyn)]), Dyn), }), Dyn, '\n.\\Richard899.py:365:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('HandlerTask', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), 'findtcb': Function(NamedParameters([('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([]), Dyn), 'waitTask': Function(NamedParameters([]), Dyn), 'runTask': Function(NamedParameters([]), Dyn), 'addPacket': Function(NamedParameters([('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('pkt', Dyn), ('r', Dyn)]), Dyn), }), "\n.\\Richard899.py:365:12: Constructed object value %s does not match type Object(HandlerTask, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn), 'findtcb': Function(['id:Dyn'], Dyn), 'qpkt': Function(['pkt:Dyn'], Dyn), 'release': Function(['i:Dyn'], Dyn), 'hold': Function([], Dyn), 'waitTask': Function([], Dyn), 'runTask': Function([], Dyn), 'addPacket': Function(['p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['pkt:Dyn', 'r:Dyn'], Dyn)}),  expected for instances of Class(HandlerTask, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'i:Dyn', 'p:Dyn', 'w:Dyn', 's:Dyn', 'r:Dyn'], Dyn), 'findtcb': Function(['self:Dyn', 'id:Dyn'], Dyn), 'qpkt': Function(['self:Dyn', 'pkt:Dyn'], Dyn), 'release': Function(['self:Dyn', 'i:Dyn'], Dyn), 'hold': Function(['self:Dyn'], Dyn), 'waitTask': Function(['self:Dyn'], Dyn), 'runTask': Function(['self:Dyn'], Dyn), 'addPacket': Function(['self:Dyn', 'p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['self:Dyn', 'pkt:Dyn', 'r:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")
            wkq = retic_cast(None, Void, Dyn, '\n.\\Richard899.py:368:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            retic_cast(DeviceTask(retic_cast(I_DEVA, Int, Dyn, '\n.\\Richard899.py:369:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(4000, Int, Dyn, '\n.\\Richard899.py:369:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), wkq, retic_cast(TaskState(), Dyn, Object('TaskState', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), }), "\n.\\Richard899.py:370:23: Constructed object value %s does not match type Object(TaskState, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn)}),  expected for instances of Class(TaskState, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)").waiting(), retic_cast(retic_cast(DeviceTaskRec(), Dyn, Object('DeviceTaskRec', {}), "\n.\\Richard899.py:370:46: Constructed object value %s does not match type Object(DeviceTaskRec, {}),  expected for instances of Class(DeviceTaskRec, {'__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('DeviceTaskRec', {}), Dyn, '\n.\\Richard899.py:369:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('DeviceTask', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), 'findtcb': Function(NamedParameters([('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([]), Dyn), 'waitTask': Function(NamedParameters([]), Dyn), 'runTask': Function(NamedParameters([]), Dyn), 'addPacket': Function(NamedParameters([('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('pkt', Dyn), ('r', Dyn)]), Dyn), }), "\n.\\Richard899.py:369:12: Constructed object value %s does not match type Object(DeviceTask, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn), 'findtcb': Function(['id:Dyn'], Dyn), 'qpkt': Function(['pkt:Dyn'], Dyn), 'release': Function(['i:Dyn'], Dyn), 'hold': Function([], Dyn), 'waitTask': Function([], Dyn), 'runTask': Function([], Dyn), 'addPacket': Function(['p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['pkt:Dyn', 'r:Dyn'], Dyn)}),  expected for instances of Class(DeviceTask, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'i:Dyn', 'p:Dyn', 'w:Dyn', 's:Dyn', 'r:Dyn'], Dyn), 'findtcb': Function(['self:Dyn', 'id:Dyn'], Dyn), 'qpkt': Function(['self:Dyn', 'pkt:Dyn'], Dyn), 'release': Function(['self:Dyn', 'i:Dyn'], Dyn), 'hold': Function(['self:Dyn'], Dyn), 'waitTask': Function(['self:Dyn'], Dyn), 'runTask': Function(['self:Dyn'], Dyn), 'addPacket': Function(['self:Dyn', 'p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['self:Dyn', 'pkt:Dyn', 'r:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")
            retic_cast(DeviceTask(retic_cast(I_DEVB, Int, Dyn, '\n.\\Richard899.py:371:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(5000, Int, Dyn, '\n.\\Richard899.py:371:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), wkq, retic_cast(TaskState(), Dyn, Object('TaskState', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), }), "\n.\\Richard899.py:372:23: Constructed object value %s does not match type Object(TaskState, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn)}),  expected for instances of Class(TaskState, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)").waiting(), retic_cast(retic_cast(DeviceTaskRec(), Dyn, Object('DeviceTaskRec', {}), "\n.\\Richard899.py:372:46: Constructed object value %s does not match type Object(DeviceTaskRec, {}),  expected for instances of Class(DeviceTaskRec, {'__init__': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('DeviceTaskRec', {}), Dyn, '\n.\\Richard899.py:371:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('DeviceTask', {'isWaitingWithPacket': Function(NamedParameters([]), Dyn), 'isTaskHoldingOrWaiting': Function(NamedParameters([]), Dyn), 'isTaskHolding': Function(NamedParameters([]), Dyn), 'isTaskWaiting': Function(NamedParameters([]), Dyn), 'isPacketPending': Function(NamedParameters([]), Dyn), 'waitingWithPacket': Function(NamedParameters([]), Dyn), 'running': Function(NamedParameters([]), Dyn), 'waiting': Function(NamedParameters([]), Dyn), 'packetPending': Function(NamedParameters([]), Dyn), 'findtcb': Function(NamedParameters([('id', Dyn)]), Dyn), 'qpkt': Function(NamedParameters([('pkt', Dyn)]), Dyn), 'release': Function(NamedParameters([('i', Dyn)]), Dyn), 'hold': Function(NamedParameters([]), Dyn), 'waitTask': Function(NamedParameters([]), Dyn), 'runTask': Function(NamedParameters([]), Dyn), 'addPacket': Function(NamedParameters([('p', Dyn), ('old', Dyn)]), Dyn), 'fn': Function(NamedParameters([('pkt', Dyn), ('r', Dyn)]), Dyn), }), "\n.\\Richard899.py:371:12: Constructed object value %s does not match type Object(DeviceTask, {'isWaitingWithPacket': Function([], Dyn), 'isTaskHoldingOrWaiting': Function([], Dyn), 'isTaskHolding': Function([], Dyn), 'isTaskWaiting': Function([], Dyn), 'isPacketPending': Function([], Dyn), 'waitingWithPacket': Function([], Dyn), 'running': Function([], Dyn), 'waiting': Function([], Dyn), 'packetPending': Function([], Dyn), 'findtcb': Function(['id:Dyn'], Dyn), 'qpkt': Function(['pkt:Dyn'], Dyn), 'release': Function(['i:Dyn'], Dyn), 'hold': Function([], Dyn), 'waitTask': Function([], Dyn), 'runTask': Function([], Dyn), 'addPacket': Function(['p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['pkt:Dyn', 'r:Dyn'], Dyn)}),  expected for instances of Class(DeviceTask, {'isWaitingWithPacket': Function(['self:Dyn'], Dyn), 'isTaskHoldingOrWaiting': Function(['self:Dyn'], Dyn), 'isTaskHolding': Function(['self:Dyn'], Dyn), 'isTaskWaiting': Function(['self:Dyn'], Dyn), 'isPacketPending': Function(['self:Dyn'], Dyn), 'waitingWithPacket': Function(['self:Dyn'], Dyn), 'running': Function(['self:Dyn'], Dyn), 'waiting': Function(['self:Dyn'], Dyn), 'packetPending': Function(['self:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'i:Dyn', 'p:Dyn', 'w:Dyn', 's:Dyn', 'r:Dyn'], Dyn), 'findtcb': Function(['self:Dyn', 'id:Dyn'], Dyn), 'qpkt': Function(['self:Dyn', 'pkt:Dyn'], Dyn), 'release': Function(['self:Dyn', 'i:Dyn'], Dyn), 'hold': Function(['self:Dyn'], Dyn), 'waitTask': Function(['self:Dyn'], Dyn), 'runTask': Function(['self:Dyn'], Dyn), 'addPacket': Function(['self:Dyn', 'p:Dyn', 'old:Dyn'], Dyn), 'fn': Function(['self:Dyn', 'pkt:Dyn', 'r:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")
            schedule()
            if ((retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'holdCount': Dyn, }), '\n.\\Richard899.py:376:15: Accessing nonexistant object attribute holdCount from value %s. (code WIDTH_DOWNCAST)').holdCount == 9297) and (retic_cast(taskWorkArea, Object('TaskWorkArea', {}), Object('TaskWorkArea', {'qpktCount': Dyn, }), '\n.\\Richard899.py:376:50: Accessing nonexistant object attribute qpktCount from value %s. (code WIDTH_DOWNCAST)').qpktCount == 23246)):
                pass
            else:
                return retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:379:16: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')
        return retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:381:8: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')

def pascal_upp(n):
    CIDict['localci5'] = 0
    CIDict['localci6'] = 0
    s = [[0 for _ in retic_cast(range(n), Iterable(Dyn), Dyn, '\n.\\Richard899.py:384: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)')] for _ in retic_cast(range(n), Iterable(Dyn), Dyn, '\n.\\Richard899.py:384: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)')]
    s[0] = [1 for _ in retic_cast(range(n), Iterable(Dyn), Dyn, '\n.\\Richard899.py:385: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)')]
    for i in retic_cast(range(retic_cast(1, Int, Dyn, '\n.\\Richard899.py:386:13: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), n), Iterable(Dyn), Dyn, '\n.\\Richard899.py:386:4: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)'):
        CIDict['fci5'] += 1
        CIDict['localci5'] += 1
        for j in retic_cast(range(i, n), Iterable(Dyn), Dyn, '\n.\\Richard899.py:387:8: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)'):
            CIDict['fci6'] += 1
            CIDict['localci6'] += 1
            s[retic_cast(i, Dyn, Int, '\n.\\Richard899.py:388: Cannot use a value %s as an index into a List(List(Int)), use a value of type Int instead. (code BAD_INDEX)')][retic_cast(j, Dyn, Int, '\n.\\Richard899.py:388: Cannot use a value %s as an index into a List(Int), use a value of type Int instead. (code BAD_INDEX)')] = (s[retic_cast((i - 1), Dyn, Int, '\n.\\Richard899.py:388: Cannot use a value %s as an index into a List(List(Int)), use a value of type Int instead. (code BAD_INDEX)')][retic_cast((j - 1), Dyn, Int, '\n.\\Richard899.py:388: Cannot use a value %s as an index into a List(Int), use a value of type Int instead. (code BAD_INDEX)')] + s[retic_cast(i, Dyn, Int, '\n.\\Richard899.py:388: Cannot use a value %s as an index into a List(List(Int)), use a value of type Int instead. (code BAD_INDEX)')][retic_cast((j - 1), Dyn, Int, '\n.\\Richard899.py:388: Cannot use a value %s as an index into a List(Int), use a value of type Int instead. (code BAD_INDEX)')])
    return retic_cast(s, List(List(Int)), Dyn, '\n.\\Richard899.py:389:4: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')

def pascal_low(n):
    return retic_cast([list(x) for x in retic_cast(zip, Dyn, Function(DynParameters, Dyn), '\n.\\Richard899.py:392:29: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(*pascal_upp(retic_cast(n, Int, Dyn, '\n.\\Richard899.py:392:34: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')))], List(List(Dyn)), List(List(Int)), '\n.\\Richard899.py:392:4: A return value of type List(List(Int)) was expected but a value %s was returned instead. (code RETURN_ERROR)')

def pascal_sym(n):
    CIDict['localci7'] = 0
    CIDict['localci8'] = 0
    s = [[1 for _ in retic_cast(range(retic_cast(n, Int, Dyn, '\n.\\Richard899.py:394:22: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Iterable(Dyn), Dyn, '\n.\\Richard899.py:394: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)')] for _ in retic_cast(range(retic_cast(n, Int, Dyn, '\n.\\Richard899.py:394:41: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Iterable(Dyn), Dyn, '\n.\\Richard899.py:394: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)')]
    for i in retic_cast(range(retic_cast(1, Int, Dyn, '\n.\\Richard899.py:395:13: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(n, Int, Dyn, '\n.\\Richard899.py:395:13: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Iterable(Dyn), Dyn, '\n.\\Richard899.py:395:4: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)'):
        CIDict['fci7'] += 1
        CIDict['localci7'] += 1
        for j in retic_cast(range(retic_cast(1, Int, Dyn, '\n.\\Richard899.py:396:17: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(n, Int, Dyn, '\n.\\Richard899.py:396:17: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Iterable(Dyn), Dyn, '\n.\\Richard899.py:396:8: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)'):
            CIDict['fci8'] += 1
            CIDict['localci8'] += 1
            s[retic_cast(i, Dyn, Int, '\n.\\Richard899.py:397: Cannot use a value %s as an index into a List(List(Int)), use a value of type Int instead. (code BAD_INDEX)')][retic_cast(j, Dyn, Int, '\n.\\Richard899.py:397: Cannot use a value %s as an index into a List(Int), use a value of type Int instead. (code BAD_INDEX)')] = (s[retic_cast((i - 1), Dyn, Int, '\n.\\Richard899.py:397: Cannot use a value %s as an index into a List(List(Int)), use a value of type Int instead. (code BAD_INDEX)')][retic_cast(j, Dyn, Int, '\n.\\Richard899.py:397: Cannot use a value %s as an index into a List(Int), use a value of type Int instead. (code BAD_INDEX)')] + s[retic_cast(i, Dyn, Int, '\n.\\Richard899.py:397: Cannot use a value %s as an index into a List(List(Int)), use a value of type Int instead. (code BAD_INDEX)')][retic_cast((j - 1), Dyn, Int, '\n.\\Richard899.py:397: Cannot use a value %s as an index into a List(Int), use a value of type Int instead. (code BAD_INDEX)')])
    return retic_cast(s, List(List(Int)), Dyn, '\n.\\Richard899.py:398:4: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')

def printMatrix(matrix):
    return

def printMatrixes(n):
    printMatrix(retic_cast(pascal_upp(retic_cast(n, Int, Dyn, '\n.\\Richard899.py:405:16: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, List(List(Int)), '\n.\\Richard899.py:405:4: Expected argument of type List(List(Int)) but value %s was provided instead. (code ARG_ERROR)'))
    printMatrix(pascal_low(n))
    printMatrix(retic_cast(pascal_sym(n), Dyn, List(List(Int)), '\n.\\Richard899.py:409:4: Expected argument of type List(List(Int)) but value %s was provided instead. (code ARG_ERROR)'))

def nextperm(a):
    CIDict['localci9'] = 0
    CIDict['localci10'] = 0
    CIDict['localci11'] = 0
    n = len(a)
    i = retic_cast((n - 1), Int, Dyn, '\n.\\Richard899.py:412:4: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
    while ((i > 0) and (a[(i - 1)] > a[i])):
        CIDict['fci9'] += 1
        CIDict['localci9'] += 1
        i = (i - 1)
    j = i
    k = retic_cast((n - 1), Int, Dyn, '\n.\\Richard899.py:416:4: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
    while (j < k):
        CIDict['fci10'] += 1
        CIDict['localci10'] += 1
        (a[j], a[k]) = (a[k], a[j])
        j = (j + 1)
        k = (k - 1)
    if (i == 0):
        return retic_cast(False, Bool, Dyn, '\n.\\Richard899.py:422:8: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')
    else:
        j = i
        while (a[j] < a[(i - 1)]):
            CIDict['fci11'] += 1
            CIDict['localci11'] += 1
            j = (j + 1)
        (a[(i - 1)], a[j]) = (a[j], a[(i - 1)])
        return retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:428:8: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')

def perm3(n, flag):
    CIDict['localci12'] = 0
    if flag:
        if (n < 1):
            return retic_cast([], List(Dyn), Dyn, '\n.\\Richard899.py:432:12: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')
        z = retic_cast(range(n), Iterable(Dyn), Dyn, '\n.\\Richard899.py:433:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
    else:
        z = retic_cast(sorted(n), List(Dyn), Dyn, '\n.\\Richard899.py:435:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
    a = list(z)
    u = [list(retic_cast(a, List(Dyn), Dyn, '\n.\\Richard899.py:437:9: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'))]
    while nextperm(retic_cast(a, List(Dyn), Dyn, '\n.\\Richard899.py:438:10: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')):
        CIDict['fci12'] += 1
        CIDict['localci12'] += 1
        u.append(list(retic_cast(a, List(Dyn), Dyn, '\n.\\Richard899.py:439:17: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')))
    return retic_cast(u, List(List(Dyn)), Dyn, '\n.\\Richard899.py:440:4: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')

def main(x, y, z):
    CIDict['localci13'] = 0
    CIDict['localci14'] = 0
    for p in perm3(x, retic_cast(z, Dyn, Bool, '\n.\\Richard899.py:442:17: Expected argument of type Bool but value %s was provided instead. (code ARG_ERROR)')):
        CIDict['fci13'] += 1
        CIDict['localci13'] += 1
        break
    for i in retic_cast(range(retic_cast(1000, Int, Dyn, '\n.\\Richard899.py:444:17: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Iterable(Dyn), Dyn, '\n.\\Richard899.py:444:8: Iteration target was expected to be of type Dyn, but value %s was provided instead. (code ITER_ERROR)'):
        CIDict['fci14'] += 1
        CIDict['localci14'] += 1
        printMatrixes(y)
if (__name__ == '__main__'):
    t0 = retic_cast(retic_cast(time, Dyn, Object('', {'time': Dyn, }), '\n.\\Richard899.py:448:9: Accessing nonexistant object attribute time from value %s. (code WIDTH_DOWNCAST)').time, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:448:9: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
    runner = retic_cast(retic_cast(pyperf, Dyn, Object('', {'Runner': Dyn, }), '\n.\\Richard899.py:449:13: Accessing nonexistant object attribute Runner from value %s. (code WIDTH_DOWNCAST)').Runner, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:449:13: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
    retic_cast(runner, Dyn, Object('', {'metadata': Dyn, }), '\n.\\Richard899.py:450:4: Accessing nonexistant object attribute metadata from value %s. (code WIDTH_DOWNCAST)').metadata['description'] = retic_cast('The Richards benchmark', String, Dyn, '\n.\\Richard899.py:450:4: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
    richard = retic_cast(Richards(), Dyn, Object('Richards', {'run': Function(NamedParameters([('iterations', Dyn)]), Dyn), }), "\n.\\Richard899.py:452:14: Constructed object value %s does not match type Object(Richards, {'run': Function(['iterations:Dyn'], Dyn)}),  expected for instances of Class(Richards, {'run': Function(['self:Dyn', 'iterations:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")
    richard.run(retic_cast(1, Int, Dyn, '\n.\\Richard899.py:453:4: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'))
    main(retic_cast(3, Int, Dyn, '\n.\\Richard899.py:454:4: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), 3, retic_cast(True, Bool, Dyn, '\n.\\Richard899.py:454:4: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'))
    retic_cast(print, Dyn, Function(AnonymousParameters([String, Dyn]), Dyn), "\n.\\Richard899.py:455:4: Expected function of type Function(['String', 'Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")('Richrd : ', retic_cast(str, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\n.\\Richard899.py:455:22: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")((retic_cast(retic_cast(time, Dyn, Object('', {'time': Dyn, }), '\n.\\Richard899.py:455:26: Accessing nonexistant object attribute time from value %s. (code WIDTH_DOWNCAST)').time, Dyn, Function(AnonymousParameters([]), Dyn), '\n.\\Richard899.py:455:26: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')() - t0)))
with open('nli.txt', 'wb') as f:
    pickle.dump(CIDict, f)
with open('nlireadable.txt', 'w+') as f:
    f.write(str(CIDict))
