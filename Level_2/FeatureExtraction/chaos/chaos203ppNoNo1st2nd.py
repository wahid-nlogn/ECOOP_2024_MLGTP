from __future__ import division, print_function
from retic.runtime import *
from retic.guarded import *
from retic.typing import *
import math
import random
import pyperf
import six
import time
import cProfile
from six.moves import xrange
DEFAULT_THICKNESS = 0.25
DEFAULT_WIDTH = 2
DEFAULT_HEIGHT = 2
DEFAULT_ITERATIONS = 1
DEFAULT_RNG_SEED = 1234

class GVector:
  def __init__(self, x=0, y=0, z=0):
        self.x = x
        self.y = y
        self.z = z
  def Mag(self:'GVector')->float:
        return math.sqrt(self.x ** 2 + self.y ** 2 + self.z ** 2)
  def dist(self:'GVector', other:'GVector')->float:
        return math.sqrt((self.x - other.x) ** 2 +
                         (self.y - other.y) ** 2 +
                         (self.z - other.z) ** 2)
  def __add__(self, other):
        if not isinstance(other, GVector):
            raise ValueError("Can't add GVector to " + str(type(other)))
        v = GVector(self.x + other.x, self.y + other.y, self.z + other.z)
        return v
  def __sub__(self:'GVector', other:'GVector')->'GVector':
        return self + other * -1
  def __mul__(self:'GVector', other:float)->'GVector':
        v = GVector(self.x * other, self.y * other, self.z * other)
        return v
  __rmul__ = __mul__
  def linear_combination(self, other, l1, l2=None):
        if l2 is None:
            l2 = 1 - l1
        v = GVector(self.x * l1 + other.x * l2,
                    self.y * l1 + other.y * l2,
                    self.z * l1 + other.z * l2)
        return v
  def __str__(self:'GVector'):
        return "<%f, %f, %f>" % (self.x, self.y, self.z)
  def __str__(self:'GVector'):
        return "GVector(%f, %f, %f)" % (self.x, self.y, self.z)


def GetKnots(points, degree):
    knots = (([0] * degree) + retic_cast(range, Dyn, Function(AnonymousParameters([Int, Dyn]), Dyn), "\nchaos203.py:51:27: Expected function of type Function(['Int', 'Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(1, (retic_cast(len, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:51:36: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(points) - degree)))
    knots = (knots + ([(retic_cast(len, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:52:14: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(points) - degree)] * degree))
    return knots

class Spline:
  def __init__(self, points, degree=3, knots=None):
        if knots is None:
            self.knots = GetKnots(points, degree)
        else:
            if len(points) > len(knots) - degree + 1:
                raise ValueError("too many control points")
            elif len(points) < len(knots) - degree + 1:
                raise ValueError("not enough control points")
            last = knots[0]
            #for cur in knots[1:]:
            #    if cur < last:
            #        raise ValueError("knots not strictly increasing")
            #    last = cur
            self.knots = knots
        self.points = points
        self.degree = degree
  def GetDomain(self:'Spline')->(int, int):
        return (self.knots[self.degree - 1],
                self.knots[len(self.knots) - self.degree])
  def __call__(self, u):
        dom = self.GetDomain()
        if u < dom[0] or u > dom[1]:
            raise ValueError("Function value not in domain")
        if u == dom[0]:
            return self.points[0]
        if u == dom[1]:
            return self.points[-1]
        I = self.GetIndex(u)
        d = [self.points[I - self.degree + 1 + ii]
             for ii in range(self.degree + 1)]
        U = self.knots
        for ik in range(1, self.degree + 1):
            for ii in range(I - self.degree + ik + 1, I + 2):
                ua = U[ii + self.degree - ik]
                ub = U[ii - 1]
                co1 = (ua - u) / (ua - ub)
                co2 = (u - ub) / (ua - ub)
                index = ii - I + self.degree - ik - 1
                d[index] = d[index].linear_combination(d[index + 1], co1, co2)
        return d[0]
  def GetIndex(self, u):
        dom = self.GetDomain()
        for ii in range(self.degree - 1, len(self.knots) - self.degree):
            if u >= self.knots[ii] and u < self.knots[ii + 1]:
                I = ii
                break
        else:
            I = dom[1] - 1
        return I
  def __len__(self:'Spline')->int:
        return len(self.points)
  def __repr__(self:'Spline'):
        return "Spline(%r, %r, %r)" % (self.points, self.degree, self.knots)



def write_ppm(im, filename):
    magic = 'P6\n'
    maxval = 255
    w = retic_cast(len, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:111:8: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(im)
    h = retic_cast(len, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:112:8: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(im[0])
    for j in retic_cast(range, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:121:13: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(h):
        for i in retic_cast(range, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:122:17: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(w):
            val = im[i][j]
            c = (val * 255)


class Chaosgame:
    retic_class_type = Class('Chaosgame', {'create_image_chaos': Function(NamedParameters([('self', Dyn), ('w', Dyn), ('h', Dyn), ('iterations', Dyn), ('filename', Dyn), ('rng_seed', Dyn)]), Dyn), 'truncate': Function(NamedParameters([('self', Dyn), ('point', Dyn)]), Dyn), 'transform_point': Function(DynParameters, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), 'get_random_trafo': Function(NamedParameters([('self', TypeVariable('Chaosgame'))]), Tuple(Int, Int)), '__init__': Function(DynParameters, Dyn), }, {})

    def __init__(self, splines, thickness=retic_cast(0.1, Float, Dyn, '\nchaos203.py:127: Parameter <_ast.arg object at 0x000001E420D71708> has a default value %s which does not match specified type Dyn. (code DEFAULT_MISMATCH)')):
        retic_cast(self, Dyn, Object('', {}), '\nchaos203.py:128:8: Cannot write to attribute splines in value %s because it is not an object. (code NON_OBJECT_WRITE)').splines = splines
        retic_cast(self, Dyn, Object('', {}), '\nchaos203.py:129:8: Cannot write to attribute thickness in value %s because it is not an object. (code NON_OBJECT_WRITE)').thickness = thickness
        self.minx = min([p.x for spl in splines for p in spl.points])
        self.miny = min([p.y for spl in splines for p in spl.points])
        self.maxx = max([p.x for spl in splines for p in spl.points])
        self.maxy = max([p.y for spl in splines for p in spl.points])

        retic_cast(self, Dyn, Object('', {}), '\nchaos203.py:134:8: Cannot write to attribute height in value %s because it is not an object. (code NON_OBJECT_WRITE)').height = (retic_cast(self, Dyn, Object('', {'maxy': Dyn, }), '\nchaos203.py:134:22: Accessing nonexistant object attribute maxy from value %s. (code WIDTH_DOWNCAST)').maxy - retic_cast(self, Dyn, Object('', {'miny': Dyn, }), '\nchaos203.py:134:34: Accessing nonexistant object attribute miny from value %s. (code WIDTH_DOWNCAST)').miny)
        retic_cast(self, Dyn, Object('', {}), '\nchaos203.py:135:8: Cannot write to attribute width in value %s because it is not an object. (code NON_OBJECT_WRITE)').width = (retic_cast(self, Dyn, Object('', {'maxx': Dyn, }), '\nchaos203.py:135:21: Accessing nonexistant object attribute maxx from value %s. (code WIDTH_DOWNCAST)').maxx - retic_cast(self, Dyn, Object('', {'minx': Dyn, }), '\nchaos203.py:135:33: Accessing nonexistant object attribute minx from value %s. (code WIDTH_DOWNCAST)').minx)
        retic_cast(self, Dyn, Object('', {}), '\nchaos203.py:136:8: Cannot write to attribute num_trafos in value %s because it is not an object. (code NON_OBJECT_WRITE)').num_trafos = retic_cast([], List(Dyn), Dyn, '\nchaos203.py:136:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        maxlength = ((thickness * retic_cast(self, Dyn, Object('', {'width': Dyn, }), '\nchaos203.py:137:32: Accessing nonexistant object attribute width from value %s. (code WIDTH_DOWNCAST)').width) / retic_cast(self, Dyn, Object('', {'height': Dyn, }), '\nchaos203.py:137:45: Accessing nonexistant object attribute height from value %s. (code WIDTH_DOWNCAST)').height)
        for spl in splines:
            length = retic_cast(0, Int, Dyn, '\nchaos203.py:139:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
            curr = retic_cast(spl, Dyn, Function(AnonymousParameters([Int]), Dyn), "\nchaos203.py:140:19: Expected function of type Function(['Int'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(0)
            for i in retic_cast(range, Dyn, Function(AnonymousParameters([Int, Int]), Dyn), "\nchaos203.py:141:21: Expected function of type Function(['Int', 'Int'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(1, 1000):
                last = curr
                t = ((1 / 999) * i)
                curr = retic_cast(spl, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:144:23: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(t)
                length = (length + retic_cast(retic_cast(curr, Dyn, Object('', {'dist': Dyn, }), '\nchaos203.py:145:26: Accessing nonexistant object attribute dist from value %s. (code WIDTH_DOWNCAST)').dist, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:145:26: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(last))
            retic_cast(retic_cast(retic_cast(self, Dyn, Object('', {'num_trafos': Dyn, }), '\nchaos203.py:146:12: Accessing nonexistant object attribute num_trafos from value %s. (code WIDTH_DOWNCAST)').num_trafos, Dyn, Object('', {'append': Dyn, }), '\nchaos203.py:146:12: Accessing nonexistant object attribute append from value %s. (code WIDTH_DOWNCAST)').append, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:146:12: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(max, Dyn, Function(AnonymousParameters([Int, Dyn]), Dyn), "\nchaos203.py:146:35: Expected function of type Function(['Int', 'Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(1, retic_cast(int, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:146:42: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(((length / maxlength) * 1.5))))
        retic_cast(self, Dyn, Object('', {}), '\nchaos203.py:147:8: Cannot write to attribute num_total in value %s because it is not an object. (code NON_OBJECT_WRITE)').num_total = retic_cast(sum, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:147:25: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(self, Dyn, Object('', {'num_trafos': Dyn, }), '\nchaos203.py:147:29: Accessing nonexistant object attribute num_trafos from value %s. (code WIDTH_DOWNCAST)').num_trafos)

    def get_random_trafo(self):
        r = retic_cast(retic_cast(random, Dyn, Object('', {'randrange': Dyn, }), '\nchaos203.py:149:12: Accessing nonexistant object attribute randrange from value %s. (code WIDTH_DOWNCAST)').randrange, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:149:12: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")((retic_cast(int, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:149:29: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(self, Object('Chaosgame', {'create_image_chaos': Function(NamedParameters([('w', Dyn), ('h', Dyn), ('iterations', Dyn), ('filename', Dyn), ('rng_seed', Dyn)]), Dyn), 'truncate': Function(NamedParameters([('point', Dyn)]), Dyn), 'transform_point': Function(DynParameters, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), 'get_random_trafo': Function(NamedParameters([]), Tuple(Int, Int)), }), Object('Chaosgame', {'num_total': Dyn, }), '\nchaos203.py:149:33: Accessing nonexistant object attribute num_total from value %s. (code WIDTH_DOWNCAST)').num_total) + 1))
        l = retic_cast(0, Int, Dyn, '\nchaos203.py:150:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        for i in retic_cast(range, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:151:17: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(len, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:151:23: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(self, Object('Chaosgame', {'create_image_chaos': Function(NamedParameters([('w', Dyn), ('h', Dyn), ('iterations', Dyn), ('filename', Dyn), ('rng_seed', Dyn)]), Dyn), 'truncate': Function(NamedParameters([('point', Dyn)]), Dyn), 'transform_point': Function(DynParameters, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), 'get_random_trafo': Function(NamedParameters([]), Tuple(Int, Int)), }), Object('Chaosgame', {'num_trafos': Dyn, }), '\nchaos203.py:151:27: Accessing nonexistant object attribute num_trafos from value %s. (code WIDTH_DOWNCAST)').num_trafos)):
            if ((r >= l) and (r < (l + retic_cast(self, Object('Chaosgame', {'create_image_chaos': Function(NamedParameters([('w', Dyn), ('h', Dyn), ('iterations', Dyn), ('filename', Dyn), ('rng_seed', Dyn)]), Dyn), 'truncate': Function(NamedParameters([('point', Dyn)]), Dyn), 'transform_point': Function(DynParameters, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), 'get_random_trafo': Function(NamedParameters([]), Tuple(Int, Int)), }), Object('Chaosgame', {'num_trafos': Dyn, }), '\nchaos203.py:152:34: Accessing nonexistant object attribute num_trafos from value %s. (code WIDTH_DOWNCAST)').num_trafos[i]))):
                return retic_cast((i, retic_cast(retic_cast(random, Dyn, Object('', {'randrange': Dyn, }), '\nchaos203.py:153:26: Accessing nonexistant object attribute randrange from value %s. (code WIDTH_DOWNCAST)').randrange, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:153:26: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(self, Object('Chaosgame', {'create_image_chaos': Function(NamedParameters([('w', Dyn), ('h', Dyn), ('iterations', Dyn), ('filename', Dyn), ('rng_seed', Dyn)]), Dyn), 'truncate': Function(NamedParameters([('point', Dyn)]), Dyn), 'transform_point': Function(DynParameters, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), 'get_random_trafo': Function(NamedParameters([]), Tuple(Int, Int)), }), Object('Chaosgame', {'num_trafos': Dyn, }), '\nchaos203.py:153:43: Accessing nonexistant object attribute num_trafos from value %s. (code WIDTH_DOWNCAST)').num_trafos[i])), Tuple(Dyn, Dyn), Tuple(Int, Int), '\nchaos203.py:153:16: A return value of type Tuple(Int,Int) was expected but a value %s was returned instead. (code RETURN_ERROR)')
            l = (l + retic_cast(self, Object('Chaosgame', {'create_image_chaos': Function(NamedParameters([('w', Dyn), ('h', Dyn), ('iterations', Dyn), ('filename', Dyn), ('rng_seed', Dyn)]), Dyn), 'truncate': Function(NamedParameters([('point', Dyn)]), Dyn), 'transform_point': Function(DynParameters, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), 'get_random_trafo': Function(NamedParameters([]), Tuple(Int, Int)), }), Object('Chaosgame', {'num_trafos': Dyn, }), '\nchaos203.py:154:17: Accessing nonexistant object attribute num_trafos from value %s. (code WIDTH_DOWNCAST)').num_trafos[i])
        return retic_cast(((retic_cast(len, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:155:15: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(self, Object('Chaosgame', {'create_image_chaos': Function(NamedParameters([('w', Dyn), ('h', Dyn), ('iterations', Dyn), ('filename', Dyn), ('rng_seed', Dyn)]), Dyn), 'truncate': Function(NamedParameters([('point', Dyn)]), Dyn), 'transform_point': Function(DynParameters, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), 'get_random_trafo': Function(NamedParameters([]), Tuple(Int, Int)), }), Object('Chaosgame', {'num_trafos': Dyn, }), '\nchaos203.py:155:19: Accessing nonexistant object attribute num_trafos from value %s. (code WIDTH_DOWNCAST)').num_trafos) - 1), retic_cast(retic_cast(random, Dyn, Object('', {'randrange': Dyn, }), '\nchaos203.py:155:41: Accessing nonexistant object attribute randrange from value %s. (code WIDTH_DOWNCAST)').randrange, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:155:41: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(self, Object('Chaosgame', {'create_image_chaos': Function(NamedParameters([('w', Dyn), ('h', Dyn), ('iterations', Dyn), ('filename', Dyn), ('rng_seed', Dyn)]), Dyn), 'truncate': Function(NamedParameters([('point', Dyn)]), Dyn), 'transform_point': Function(DynParameters, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), 'get_random_trafo': Function(NamedParameters([]), Tuple(Int, Int)), }), Object('Chaosgame', {'num_trafos': Dyn, }), '\nchaos203.py:155:58: Accessing nonexistant object attribute num_trafos from value %s. (code WIDTH_DOWNCAST)').num_trafos[(- 1)])), Tuple(Dyn, Dyn), Tuple(Int, Int), '\nchaos203.py:155:8: A return value of type Tuple(Int,Int) was expected but a value %s was returned instead. (code RETURN_ERROR)')

    def transform_point(self, point, trafo=retic_cast(None, Void, Dyn, '\nchaos203.py:156: Parameter <_ast.arg object at 0x000001E420D7FD48> has a default value %s which does not match specified type Dyn. (code DEFAULT_MISMATCH)')):
        x = ((retic_cast(point, Dyn, Object('', {'x': Dyn, }), '\nchaos203.py:157:13: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x - retic_cast(self, Dyn, Object('', {'minx': Dyn, }), '\nchaos203.py:157:23: Accessing nonexistant object attribute minx from value %s. (code WIDTH_DOWNCAST)').minx) / retic_cast(self, Dyn, Object('', {'width': Dyn, }), '\nchaos203.py:157:36: Accessing nonexistant object attribute width from value %s. (code WIDTH_DOWNCAST)').width)
        y = ((retic_cast(point, Dyn, Object('', {'y': Dyn, }), '\nchaos203.py:158:13: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y - retic_cast(self, Dyn, Object('', {'miny': Dyn, }), '\nchaos203.py:158:23: Accessing nonexistant object attribute miny from value %s. (code WIDTH_DOWNCAST)').miny) / retic_cast(self, Dyn, Object('', {'height': Dyn, }), '\nchaos203.py:158:36: Accessing nonexistant object attribute height from value %s. (code WIDTH_DOWNCAST)').height)
        if (trafo is None):
            trafo = retic_cast(retic_cast(self, Dyn, Object('', {'get_random_trafo': Dyn, }), '\nchaos203.py:160:20: Accessing nonexistant object attribute get_random_trafo from value %s. (code WIDTH_DOWNCAST)').get_random_trafo, Dyn, Function(AnonymousParameters([]), Dyn), '\nchaos203.py:160:20: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        (start, end) = retic_cast(retic_cast(retic_cast(retic_cast(self, Dyn, Object('', {'splines': Dyn, }), '\nchaos203.py:161:21: Accessing nonexistant object attribute splines from value %s. (code WIDTH_DOWNCAST)').splines[trafo[0]], Dyn, Object('', {'GetDomain': Dyn, }), '\nchaos203.py:161:21: Accessing nonexistant object attribute GetDomain from value %s. (code WIDTH_DOWNCAST)').GetDomain, Dyn, Function(AnonymousParameters([]), Dyn), '\nchaos203.py:161:21: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(), Dyn, Tuple(Dyn, Dyn), '\nchaos203.py:161:8: Right hand side of assignment was expected to be of type Tuple(Dyn,Dyn), but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        length = (end - start)
        seg_length = (length / retic_cast(self, Dyn, Object('', {'num_trafos': Dyn, }), '\nchaos203.py:163:30: Accessing nonexistant object attribute num_trafos from value %s. (code WIDTH_DOWNCAST)').num_trafos[trafo[0]])
        t = ((start + (seg_length * trafo[1])) + (seg_length * x))
        basepoint = retic_cast(retic_cast(self, Dyn, Object('', {'splines': Dyn, }), '\nchaos203.py:165:20: Accessing nonexistant object attribute splines from value %s. (code WIDTH_DOWNCAST)').splines[trafo[0]], Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:165:20: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(t)
        if ((t + (1 / 50000)) > end):
            neighbour = retic_cast(retic_cast(self, Dyn, Object('', {'splines': Dyn, }), '\nchaos203.py:167:24: Accessing nonexistant object attribute splines from value %s. (code WIDTH_DOWNCAST)').splines[trafo[0]], Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:167:24: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")((t - (1 / 50000)))
            derivative = (neighbour - basepoint)
        else:
            neighbour = retic_cast(retic_cast(self, Dyn, Object('', {'splines': Dyn, }), '\nchaos203.py:170:24: Accessing nonexistant object attribute splines from value %s. (code WIDTH_DOWNCAST)').splines[trafo[0]], Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:170:24: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")((t + (1 / 50000)))
            derivative = (basepoint - neighbour)
        if (retic_cast(retic_cast(derivative, Dyn, Object('', {'Mag': Dyn, }), '\nchaos203.py:172:11: Accessing nonexistant object attribute Mag from value %s. (code WIDTH_DOWNCAST)').Mag, Dyn, Function(AnonymousParameters([]), Dyn), '\nchaos203.py:172:11: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')() != 0):
            retic_cast(basepoint, Dyn, Object('', {}), '\nchaos203.py:173:12: Cannot write to attribute x in value %s because it is not an object. (code NON_OBJECT_WRITE)').x = (retic_cast(basepoint, Dyn, Object('', {'x': Dyn, }), '\nchaos203.py:173:12: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x + (((retic_cast(derivative, Dyn, Object('', {'y': Dyn, }), '\nchaos203.py:173:27: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y / retic_cast(retic_cast(derivative, Dyn, Object('', {'Mag': Dyn, }), '\nchaos203.py:173:42: Accessing nonexistant object attribute Mag from value %s. (code WIDTH_DOWNCAST)').Mag, Dyn, Function(AnonymousParameters([]), Dyn), '\nchaos203.py:173:42: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()) * (y - 0.5)) * retic_cast(self, Dyn, Object('', {'thickness': Dyn, }), '\nchaos203.py:173:89: Accessing nonexistant object attribute thickness from value %s. (code WIDTH_DOWNCAST)').thickness))
            retic_cast(basepoint, Dyn, Object('', {}), '\nchaos203.py:174:12: Cannot write to attribute y in value %s because it is not an object. (code NON_OBJECT_WRITE)').y = (retic_cast(basepoint, Dyn, Object('', {'y': Dyn, }), '\nchaos203.py:174:12: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y + ((((- retic_cast(derivative, Dyn, Object('', {'x': Dyn, }), '\nchaos203.py:174:28: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x) / retic_cast(retic_cast(derivative, Dyn, Object('', {'Mag': Dyn, }), '\nchaos203.py:174:43: Accessing nonexistant object attribute Mag from value %s. (code WIDTH_DOWNCAST)').Mag, Dyn, Function(AnonymousParameters([]), Dyn), '\nchaos203.py:174:43: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()) * (y - 0.5)) * retic_cast(self, Dyn, Object('', {'thickness': Dyn, }), '\nchaos203.py:174:90: Accessing nonexistant object attribute thickness from value %s. (code WIDTH_DOWNCAST)').thickness))
        else:
            retic_cast(print, Dyn, Function(DynParameters, Dyn), '\nchaos203.py:176:12: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')('r', end='')
        retic_cast(retic_cast(self, Dyn, Object('', {'truncate': Dyn, }), '\nchaos203.py:177:8: Accessing nonexistant object attribute truncate from value %s. (code WIDTH_DOWNCAST)').truncate, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:177:8: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(basepoint)
        return retic_cast(basepoint, Dyn, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), }), "\nchaos203.py:178:8: A return value of type Object(GVector, {'__rmul__': Dyn, '__repr__': Function([], Dyn), '__str__': Function([], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['other:Dyn'], Dyn), '__sub__': Function(['other:Dyn'], Dyn), '__add__': Function(['other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['other:TypeVar(GVector)'], Float), 'Mag': Function([], Dyn)}) was expected but a value %s was returned instead. (code RETURN_ERROR)")

    def truncate(self, point):
        if (retic_cast(point, Dyn, Object('', {'x': Dyn, }), '\nchaos203.py:180:11: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x >= retic_cast(self, Dyn, Object('', {'maxx': Dyn, }), '\nchaos203.py:180:22: Accessing nonexistant object attribute maxx from value %s. (code WIDTH_DOWNCAST)').maxx):
            retic_cast(point, Dyn, Object('', {}), '\nchaos203.py:181:12: Cannot write to attribute x in value %s because it is not an object. (code NON_OBJECT_WRITE)').x = retic_cast(self, Dyn, Object('', {'maxx': Dyn, }), '\nchaos203.py:181:22: Accessing nonexistant object attribute maxx from value %s. (code WIDTH_DOWNCAST)').maxx
        if (retic_cast(point, Dyn, Object('', {'y': Dyn, }), '\nchaos203.py:182:11: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y >= retic_cast(self, Dyn, Object('', {'maxy': Dyn, }), '\nchaos203.py:182:22: Accessing nonexistant object attribute maxy from value %s. (code WIDTH_DOWNCAST)').maxy):
            retic_cast(point, Dyn, Object('', {}), '\nchaos203.py:183:12: Cannot write to attribute y in value %s because it is not an object. (code NON_OBJECT_WRITE)').y = retic_cast(self, Dyn, Object('', {'maxy': Dyn, }), '\nchaos203.py:183:22: Accessing nonexistant object attribute maxy from value %s. (code WIDTH_DOWNCAST)').maxy
        if (retic_cast(point, Dyn, Object('', {'x': Dyn, }), '\nchaos203.py:184:11: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x < retic_cast(self, Dyn, Object('', {'minx': Dyn, }), '\nchaos203.py:184:21: Accessing nonexistant object attribute minx from value %s. (code WIDTH_DOWNCAST)').minx):
            retic_cast(point, Dyn, Object('', {}), '\nchaos203.py:185:12: Cannot write to attribute x in value %s because it is not an object. (code NON_OBJECT_WRITE)').x = retic_cast(self, Dyn, Object('', {'minx': Dyn, }), '\nchaos203.py:185:22: Accessing nonexistant object attribute minx from value %s. (code WIDTH_DOWNCAST)').minx
        if (retic_cast(point, Dyn, Object('', {'y': Dyn, }), '\nchaos203.py:186:11: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y < retic_cast(self, Dyn, Object('', {'miny': Dyn, }), '\nchaos203.py:186:21: Accessing nonexistant object attribute miny from value %s. (code WIDTH_DOWNCAST)').miny):
            retic_cast(point, Dyn, Object('', {}), '\nchaos203.py:187:12: Cannot write to attribute y in value %s because it is not an object. (code NON_OBJECT_WRITE)').y = retic_cast(self, Dyn, Object('', {'miny': Dyn, }), '\nchaos203.py:187:22: Accessing nonexistant object attribute miny from value %s. (code WIDTH_DOWNCAST)').miny

    def create_image_chaos(self, w, h, iterations, filename, rng_seed):
        retic_cast(retic_cast(random, Dyn, Object('', {'seed': Dyn, }), '\nchaos203.py:191:8: Accessing nonexistant object attribute seed from value %s. (code WIDTH_DOWNCAST)').seed, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:191:8: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(rng_seed)
        im = [([1] * h) for i in retic_cast(range, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:193:31: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(w)]
        point = retic_cast(retic_cast(GVector(((retic_cast(self, Dyn, Object('', {'maxx': Dyn, }), '\nchaos203.py:194:25: Accessing nonexistant object attribute maxx from value %s. (code WIDTH_DOWNCAST)').maxx + retic_cast(self, Dyn, Object('', {'minx': Dyn, }), '\nchaos203.py:194:37: Accessing nonexistant object attribute minx from value %s. (code WIDTH_DOWNCAST)').minx) / 2), ((retic_cast(self, Dyn, Object('', {'maxy': Dyn, }), '\nchaos203.py:195:25: Accessing nonexistant object attribute maxy from value %s. (code WIDTH_DOWNCAST)').maxy + retic_cast(self, Dyn, Object('', {'miny': Dyn, }), '\nchaos203.py:195:37: Accessing nonexistant object attribute miny from value %s. (code WIDTH_DOWNCAST)').miny) / 2), retic_cast(0, Int, Dyn, '\nchaos203.py:194:16: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), }), "\nchaos203.py:194:16: Constructed object value %s does not match type Object(GVector, {'__rmul__': Dyn, '__repr__': Function([], Dyn), '__str__': Function([], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['other:Dyn'], Dyn), '__sub__': Function(['other:Dyn'], Dyn), '__add__': Function(['other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['other:TypeVar(GVector)'], Float), 'Mag': Function([], Dyn)}),  expected for instances of Class(GVector, {'__rmul__': Dyn, '__repr__': Function(['self:Dyn'], Dyn), '__str__': Function(['self:TypeVar(GVector)'], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__sub__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__add__': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], Float), 'Mag': Function(['self:Dyn'], Dyn), '__init__': Function(DynParameters, Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), }), Dyn, '\nchaos203.py:194:8: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
        for _ in retic_cast(xrange, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:196:17: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(iterations):
            point = retic_cast(retic_cast(self, Dyn, Object('', {'transform_point': Dyn, }), '\nchaos203.py:197:20: Accessing nonexistant object attribute transform_point from value %s. (code WIDTH_DOWNCAST)').transform_point, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:197:20: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(point)
            x = (((retic_cast(point, Dyn, Object('', {'x': Dyn, }), '\nchaos203.py:198:17: Accessing nonexistant object attribute x from value %s. (code WIDTH_DOWNCAST)').x - retic_cast(self, Dyn, Object('', {'minx': Dyn, }), '\nchaos203.py:198:27: Accessing nonexistant object attribute minx from value %s. (code WIDTH_DOWNCAST)').minx) / retic_cast(self, Dyn, Object('', {'width': Dyn, }), '\nchaos203.py:198:40: Accessing nonexistant object attribute width from value %s. (code WIDTH_DOWNCAST)').width) * w)
            y = (((retic_cast(point, Dyn, Object('', {'y': Dyn, }), '\nchaos203.py:199:17: Accessing nonexistant object attribute y from value %s. (code WIDTH_DOWNCAST)').y - retic_cast(self, Dyn, Object('', {'miny': Dyn, }), '\nchaos203.py:199:27: Accessing nonexistant object attribute miny from value %s. (code WIDTH_DOWNCAST)').miny) / retic_cast(self, Dyn, Object('', {'height': Dyn, }), '\nchaos203.py:199:40: Accessing nonexistant object attribute height from value %s. (code WIDTH_DOWNCAST)').height) * h)
            x = retic_cast(int, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:200:16: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(x)
            y = retic_cast(int, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:201:16: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(y)
            if (x == w):
                x = (x - 1)
            if (y == h):
                y = (y - 1)
            im[retic_cast(x, Dyn, Int, '\nchaos203.py:206: Cannot use a value %s as an index into a List(Dyn), use a value of type Int instead. (code BAD_INDEX)')][((h - y) - 1)] = retic_cast(0, Int, Dyn, '\nchaos203.py:206:12: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')

def main(runner, args):
    splines = [retic_cast(Spline(retic_cast([retic_cast(GVector(retic_cast(2.00167, Float, Dyn, '\nchaos203.py:214:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(4.01132, Float, Dyn, '\nchaos203.py:214:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(0.0, Float, Dyn, '\nchaos203.py:214:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), }), "\nchaos203.py:214:12: Constructed object value %s does not match type Object(GVector, {'__rmul__': Dyn, '__repr__': Function([], Dyn), '__str__': Function([], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['other:Dyn'], Dyn), '__sub__': Function(['other:Dyn'], Dyn), '__add__': Function(['other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['other:TypeVar(GVector)'], Float), 'Mag': Function([], Dyn)}),  expected for instances of Class(GVector, {'__rmul__': Dyn, '__repr__': Function(['self:Dyn'], Dyn), '__str__': Function(['self:TypeVar(GVector)'], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__sub__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__add__': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], Float), 'Mag': Function(['self:Dyn'], Dyn), '__init__': Function(DynParameters, Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), retic_cast(GVector(retic_cast(2.33504, Float, Dyn, '\nchaos203.py:215:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(3.31283, Float, Dyn, '\nchaos203.py:215:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(0.0, Float, Dyn, '\nchaos203.py:215:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), }), "\nchaos203.py:215:12: Constructed object value %s does not match type Object(GVector, {'__rmul__': Dyn, '__repr__': Function([], Dyn), '__str__': Function([], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['other:Dyn'], Dyn), '__sub__': Function(['other:Dyn'], Dyn), '__add__': Function(['other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['other:TypeVar(GVector)'], Float), 'Mag': Function([], Dyn)}),  expected for instances of Class(GVector, {'__rmul__': Dyn, '__repr__': Function(['self:Dyn'], Dyn), '__str__': Function(['self:TypeVar(GVector)'], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__sub__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__add__': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], Float), 'Mag': Function(['self:Dyn'], Dyn), '__init__': Function(DynParameters, Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), retic_cast(GVector(retic_cast(2.3668, Float, Dyn, '\nchaos203.py:216:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(3.23346, Float, Dyn, '\nchaos203.py:216:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(0.0, Float, Dyn, '\nchaos203.py:216:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), }), "\nchaos203.py:216:12: Constructed object value %s does not match type Object(GVector, {'__rmul__': Dyn, '__repr__': Function([], Dyn), '__str__': Function([], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['other:Dyn'], Dyn), '__sub__': Function(['other:Dyn'], Dyn), '__add__': Function(['other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['other:TypeVar(GVector)'], Float), 'Mag': Function([], Dyn)}),  expected for instances of Class(GVector, {'__rmul__': Dyn, '__repr__': Function(['self:Dyn'], Dyn), '__str__': Function(['self:TypeVar(GVector)'], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__sub__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__add__': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], Float), 'Mag': Function(['self:Dyn'], Dyn), '__init__': Function(DynParameters, Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)"), retic_cast(GVector(retic_cast(2.3668, Float, Dyn, '\nchaos203.py:217:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(3.23346, Float, Dyn, '\nchaos203.py:217:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(0.0, Float, Dyn, '\nchaos203.py:217:12: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), }), "\nchaos203.py:217:12: Constructed object value %s does not match type Object(GVector, {'__rmul__': Dyn, '__repr__': Function([], Dyn), '__str__': Function([], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['other:Dyn'], Dyn), '__sub__': Function(['other:Dyn'], Dyn), '__add__': Function(['other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['other:TypeVar(GVector)'], Float), 'Mag': Function([], Dyn)}),  expected for instances of Class(GVector, {'__rmul__': Dyn, '__repr__': Function(['self:Dyn'], Dyn), '__str__': Function(['self:TypeVar(GVector)'], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__sub__': Function(['self:Dyn', 'other:Dyn'], Dyn), '__add__': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['self:TypeVar(GVector)', 'other:TypeVar(GVector)'], Float), 'Mag': Function(['self:Dyn'], Dyn), '__init__': Function(DynParameters, Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")], List(Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), Dyn, '\nchaos203.py:213:8: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(3, Int, Dyn, '\nchaos203.py:213:8: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast([0, 0, 0, 1, 1, 1], List(Int), Dyn, '\nchaos203.py:213:8: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)')), Dyn, Object('Spline', {'__repr__': Function(NamedParameters([]), Dyn), '__len__': Function(NamedParameters([]), Dyn), 'GetIndex': Function(NamedParameters([('u', Dyn)]), Dyn), '__call__': Function(NamedParameters([('u', Float)]), Dyn), 'GetDomain': Function(NamedParameters([]), Tuple(Int, Int)), }), "\nchaos203.py:213:8: Constructed object value %s does not match type Object(Spline, {'__repr__': Function([], Dyn), '__len__': Function([], Dyn), 'GetIndex': Function(['u:Dyn'], Dyn), '__call__': Function(['u:Float'], Dyn), 'GetDomain': Function([], Tuple(Int,Int))}),  expected for instances of Class(Spline, {'__repr__': Function(['self:Dyn'], Dyn), '__len__': Function(['self:Dyn'], Dyn), 'GetIndex': Function(['self:Dyn', 'u:Dyn'], Dyn), '__call__': Function(['self:TypeVar(Spline)', 'u:Float'], Dyn), 'GetDomain': Function(['self:TypeVar(Spline)'], Tuple(Int,Int)), '__init__': Function(DynParameters, Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")]
    retic_cast(runner, Dyn, Object('', {'metadata': Dyn, }), '\nchaos203.py:221:4: Accessing nonexistant object attribute metadata from value %s. (code WIDTH_DOWNCAST)').metadata['chaos_thickness'] = retic_cast(args, Dyn, Object('', {'thickness': Dyn, }), '\nchaos203.py:221:41: Accessing nonexistant object attribute thickness from value %s. (code WIDTH_DOWNCAST)').thickness
    retic_cast(runner, Dyn, Object('', {'metadata': Dyn, }), '\nchaos203.py:222:4: Accessing nonexistant object attribute metadata from value %s. (code WIDTH_DOWNCAST)').metadata['chaos_width'] = retic_cast(args, Dyn, Object('', {'width': Dyn, }), '\nchaos203.py:222:37: Accessing nonexistant object attribute width from value %s. (code WIDTH_DOWNCAST)').width
    retic_cast(runner, Dyn, Object('', {'metadata': Dyn, }), '\nchaos203.py:223:4: Accessing nonexistant object attribute metadata from value %s. (code WIDTH_DOWNCAST)').metadata['chaos_height'] = retic_cast(args, Dyn, Object('', {'height': Dyn, }), '\nchaos203.py:223:38: Accessing nonexistant object attribute height from value %s. (code WIDTH_DOWNCAST)').height
    retic_cast(runner, Dyn, Object('', {'metadata': Dyn, }), '\nchaos203.py:224:4: Accessing nonexistant object attribute metadata from value %s. (code WIDTH_DOWNCAST)').metadata['chaos_iterations'] = retic_cast(args, Dyn, Object('', {'iterations': Dyn, }), '\nchaos203.py:224:42: Accessing nonexistant object attribute iterations from value %s. (code WIDTH_DOWNCAST)').iterations
    retic_cast(runner, Dyn, Object('', {'metadata': Dyn, }), '\nchaos203.py:225:4: Accessing nonexistant object attribute metadata from value %s. (code WIDTH_DOWNCAST)').metadata['chaos_rng_seed'] = retic_cast(args, Dyn, Object('', {'rng_seed': Dyn, }), '\nchaos203.py:225:40: Accessing nonexistant object attribute rng_seed from value %s. (code WIDTH_DOWNCAST)').rng_seed
    chaos_var = retic_cast(Chaosgame(retic_cast(splines, List(Object('Spline', {'__repr__': Function(NamedParameters([]), Dyn), '__len__': Function(NamedParameters([]), Dyn), 'GetIndex': Function(NamedParameters([('u', Dyn)]), Dyn), '__call__': Function(NamedParameters([('u', Float)]), Dyn), 'GetDomain': Function(NamedParameters([]), Tuple(Int, Int)), })), Dyn, '\nchaos203.py:227:16: Expected argument of type Dyn but value %s was provided instead. (code ARG_ERROR)'), retic_cast(args, Dyn, Object('', {'thickness': Dyn, }), '\nchaos203.py:227:35: Accessing nonexistant object attribute thickness from value %s. (code WIDTH_DOWNCAST)').thickness), Dyn, Object('Chaosgame', {'create_image_chaos': Function(NamedParameters([('w', Dyn), ('h', Dyn), ('iterations', Dyn), ('filename', Dyn), ('rng_seed', Dyn)]), Dyn), 'truncate': Function(NamedParameters([('point', Dyn)]), Dyn), 'transform_point': Function(DynParameters, Object('GVector', {'__rmul__': Dyn, '__repr__': Function(NamedParameters([]), Dyn), '__str__': Function(NamedParameters([]), Dyn), 'linear_combination': Function(DynParameters, TypeVariable('GVector')), '__mul__': Function(NamedParameters([('other', Dyn)]), Dyn), '__sub__': Function(NamedParameters([('other', Dyn)]), Dyn), '__add__': Function(NamedParameters([('other', TypeVariable('GVector'))]), TypeVariable('GVector')), 'dist': Function(NamedParameters([('other', TypeVariable('GVector'))]), Float), 'Mag': Function(NamedParameters([]), Dyn), })), 'get_random_trafo': Function(NamedParameters([]), Tuple(Int, Int)), }), "\nchaos203.py:227:16: Constructed object value %s does not match type Object(Chaosgame, {'create_image_chaos': Function(['w:Dyn', 'h:Dyn', 'iterations:Dyn', 'filename:Dyn', 'rng_seed:Dyn'], Dyn), 'truncate': Function(['point:Dyn'], Dyn), 'transform_point': Function(DynParameters, Object(GVector, {'__rmul__': Dyn, '__repr__': Function([], Dyn), '__str__': Function([], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['other:Dyn'], Dyn), '__sub__': Function(['other:Dyn'], Dyn), '__add__': Function(['other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['other:TypeVar(GVector)'], Float), 'Mag': Function([], Dyn)})), 'get_random_trafo': Function([], Tuple(Int,Int))}),  expected for instances of Class(Chaosgame, {'create_image_chaos': Function(['self:Dyn', 'w:Dyn', 'h:Dyn', 'iterations:Dyn', 'filename:Dyn', 'rng_seed:Dyn'], Dyn), 'truncate': Function(['self:Dyn', 'point:Dyn'], Dyn), 'transform_point': Function(DynParameters, Object(GVector, {'__rmul__': Dyn, '__repr__': Function([], Dyn), '__str__': Function([], Dyn), 'linear_combination': Function(DynParameters, TypeVar(GVector)), '__mul__': Function(['other:Dyn'], Dyn), '__sub__': Function(['other:Dyn'], Dyn), '__add__': Function(['other:TypeVar(GVector)'], TypeVar(GVector)), 'dist': Function(['other:TypeVar(GVector)'], Float), 'Mag': Function([], Dyn)})), 'get_random_trafo': Function(['self:TypeVar(Chaosgame)'], Tuple(Int,Int)), '__init__': Function(DynParameters, Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_OBJECT_INJECTION)")
    chaos_var.create_image_chaos(retic_cast(args, Dyn, Object('', {'width': Dyn, }), '\nchaos203.py:228:33: Accessing nonexistant object attribute width from value %s. (code WIDTH_DOWNCAST)').width, retic_cast(args, Dyn, Object('', {'height': Dyn, }), '\nchaos203.py:228:45: Accessing nonexistant object attribute height from value %s. (code WIDTH_DOWNCAST)').height, retic_cast(args, Dyn, Object('', {'iterations': Dyn, }), '\nchaos203.py:228:58: Accessing nonexistant object attribute iterations from value %s. (code WIDTH_DOWNCAST)').iterations, retic_cast(args, Dyn, Object('', {'filename': Dyn, }), '\nchaos203.py:228:75: Accessing nonexistant object attribute filename from value %s. (code WIDTH_DOWNCAST)').filename, retic_cast(args, Dyn, Object('', {'rng_seed': Dyn, }), '\nchaos203.py:228:90: Accessing nonexistant object attribute rng_seed from value %s. (code WIDTH_DOWNCAST)').rng_seed)

def add_cmdline_args(cmd, args):
    retic_cast(retic_cast(cmd, Dyn, Object('', {'append': Dyn, }), '\nchaos203.py:235:4: Accessing nonexistant object attribute append from value %s. (code WIDTH_DOWNCAST)').append, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:235:4: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(('--width=%s' % retic_cast(args, Dyn, Object('', {'width': Dyn, }), '\nchaos203.py:235:30: Accessing nonexistant object attribute width from value %s. (code WIDTH_DOWNCAST)').width))
    retic_cast(retic_cast(cmd, Dyn, Object('', {'append': Dyn, }), '\nchaos203.py:236:4: Accessing nonexistant object attribute append from value %s. (code WIDTH_DOWNCAST)').append, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:236:4: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(('--height=%s' % retic_cast(args, Dyn, Object('', {'height': Dyn, }), '\nchaos203.py:236:31: Accessing nonexistant object attribute height from value %s. (code WIDTH_DOWNCAST)').height))
    retic_cast(retic_cast(cmd, Dyn, Object('', {'append': Dyn, }), '\nchaos203.py:237:4: Accessing nonexistant object attribute append from value %s. (code WIDTH_DOWNCAST)').append, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:237:4: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(('--thickness=%s' % retic_cast(args, Dyn, Object('', {'thickness': Dyn, }), '\nchaos203.py:237:34: Accessing nonexistant object attribute thickness from value %s. (code WIDTH_DOWNCAST)').thickness))
    retic_cast(retic_cast(cmd, Dyn, Object('', {'append': Dyn, }), '\nchaos203.py:238:4: Accessing nonexistant object attribute append from value %s. (code WIDTH_DOWNCAST)').append, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:238:4: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(('--rng-seed=%s' % retic_cast(args, Dyn, Object('', {'rng_seed': Dyn, }), '\nchaos203.py:238:33: Accessing nonexistant object attribute rng_seed from value %s. (code WIDTH_DOWNCAST)').rng_seed))
    if retic_cast(args, Dyn, Object('', {'filename': Dyn, }), '\nchaos203.py:239:7: Accessing nonexistant object attribute filename from value %s. (code WIDTH_DOWNCAST)').filename:
        retic_cast(retic_cast(cmd, Dyn, Object('', {'extend': Dyn, }), '\nchaos203.py:240:8: Accessing nonexistant object attribute extend from value %s. (code WIDTH_DOWNCAST)').extend, Dyn, Function(AnonymousParameters([Tuple(String, Dyn)]), Dyn), "\nchaos203.py:240:8: Expected function of type Function(['Tuple(String,Dyn)'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(('--filename', retic_cast(args, Dyn, Object('', {'filename': Dyn, }), '\nchaos203.py:240:34: Accessing nonexistant object attribute filename from value %s. (code WIDTH_DOWNCAST)').filename))
if (__name__ == '__main__'):
    runner = retic_cast(retic_cast(pyperf, Dyn, Object('', {'Runner': Dyn, }), '\nchaos203.py:244:13: Accessing nonexistant object attribute Runner from value %s. (code WIDTH_DOWNCAST)').Runner, Dyn, Function(DynParameters, Dyn), '\nchaos203.py:244:13: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')(add_cmdline_args=add_cmdline_args)
    retic_cast(runner, Dyn, Object('', {'metadata': Dyn, }), '\nchaos203.py:245:4: Accessing nonexistant object attribute metadata from value %s. (code WIDTH_DOWNCAST)').metadata['description'] = retic_cast('Create chaosgame-like fractals', String, Dyn, '\nchaos203.py:245:4: Right hand side of assignment was expected to be of type Dyn, but value %s provided instead. (code SINGLE_ASSIGN_ERROR)')
    cmd = retic_cast(runner, Dyn, Object('', {'argparser': Dyn, }), '\nchaos203.py:246:10: Accessing nonexistant object attribute argparser from value %s. (code WIDTH_DOWNCAST)').argparser
    retic_cast(retic_cast(cmd, Dyn, Object('', {'add_argument': Dyn, }), '\nchaos203.py:247:4: Accessing nonexistant object attribute add_argument from value %s. (code WIDTH_DOWNCAST)').add_argument, Dyn, Function(DynParameters, Dyn), '\nchaos203.py:247:4: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')('--thickness', type=float, default=DEFAULT_THICKNESS, help=('Thickness (default: %s)' % DEFAULT_THICKNESS))
    retic_cast(retic_cast(cmd, Dyn, Object('', {'add_argument': Dyn, }), '\nchaos203.py:250:4: Accessing nonexistant object attribute add_argument from value %s. (code WIDTH_DOWNCAST)').add_argument, Dyn, Function(DynParameters, Dyn), '\nchaos203.py:250:4: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')('--width', type=int, default=DEFAULT_WIDTH, help=('Image width (default: %s)' % DEFAULT_WIDTH))
    retic_cast(retic_cast(cmd, Dyn, Object('', {'add_argument': Dyn, }), '\nchaos203.py:253:4: Accessing nonexistant object attribute add_argument from value %s. (code WIDTH_DOWNCAST)').add_argument, Dyn, Function(DynParameters, Dyn), '\nchaos203.py:253:4: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')('--height', type=int, default=DEFAULT_HEIGHT, help=('Image height (default: %s)' % DEFAULT_HEIGHT))
    retic_cast(retic_cast(cmd, Dyn, Object('', {'add_argument': Dyn, }), '\nchaos203.py:256:4: Accessing nonexistant object attribute add_argument from value %s. (code WIDTH_DOWNCAST)').add_argument, Dyn, Function(DynParameters, Dyn), '\nchaos203.py:256:4: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')('--iterations', type=int, default=DEFAULT_ITERATIONS, help=('Number of iterations (default: %s)' % DEFAULT_ITERATIONS))
    retic_cast(retic_cast(cmd, Dyn, Object('', {'add_argument': Dyn, }), '\nchaos203.py:260:4: Accessing nonexistant object attribute add_argument from value %s. (code WIDTH_DOWNCAST)').add_argument, Dyn, Function(DynParameters, Dyn), '\nchaos203.py:260:4: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')('--filename', metavar='FILENAME.PPM', help='Output filename of the PPM picture')
    retic_cast(retic_cast(cmd, Dyn, Object('', {'add_argument': Dyn, }), '\nchaos203.py:262:4: Accessing nonexistant object attribute add_argument from value %s. (code WIDTH_DOWNCAST)').add_argument, Dyn, Function(DynParameters, Dyn), '\nchaos203.py:262:4: Expected function of type Function(DynParameters, Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')('--rng-seed', type=int, default=DEFAULT_RNG_SEED, help=('Random number generator seed (default: %s)' % DEFAULT_RNG_SEED))
    args = retic_cast(retic_cast(runner, Dyn, Object('', {'parse_args': Dyn, }), '\nchaos203.py:267:11: Accessing nonexistant object attribute parse_args from value %s. (code WIDTH_DOWNCAST)').parse_args, Dyn, Function(AnonymousParameters([]), Dyn), '\nchaos203.py:267:11: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
    t0 = retic_cast(retic_cast(time, Dyn, Object('', {'time': Dyn, }), '\nchaos203.py:268:9: Accessing nonexistant object attribute time from value %s. (code WIDTH_DOWNCAST)').time, Dyn, Function(AnonymousParameters([]), Dyn), '\nchaos203.py:268:9: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
#    cProfile.run('main(runner, args)')
    main(runner, args)
    t1 = retic_cast(retic_cast(time, Dyn, Object('', {'time': Dyn, }), '\nchaos203.py:270:9: Accessing nonexistant object attribute time from value %s. (code WIDTH_DOWNCAST)').time, Dyn, Function(AnonymousParameters([]), Dyn), '\nchaos203.py:270:9: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
    retic_cast(print, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nchaos203.py:271:4: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")((t1 - t0))
